{"version":3,"sources":["../webpack/bootstrap","../external \"../package.json\"",".././src/activate.ts",".././src/core.clients/index.ts",".././src/core.clients/src/caching/expiryCacheMap.ts",".././src/core.clients/src/definitions/clientResponses.ts",".././src/core.clients/src/definitions/eCachingContributions.ts",".././src/core.clients/src/definitions/eHttpClientRequestMethods.ts",".././src/core.clients/src/definitions/eHttpContributions.ts",".././src/core.clients/src/helpers/urlHelpers.ts",".././src/core.clients/src/options/cachingOptions.ts",".././src/core.clients/src/options/httpOptions.ts",".././src/core.clients/src/requests/abstractCachedRequest.ts",".././src/core.clients/src/requests/jsonHttpClient.ts",".././src/core.configuration/index.ts",".././src/core.configuration/src/options.ts",".././src/core.configuration/src/optionsWithFallback.ts",".././src/core.logging/index.ts",".././src/core.logging/src/definitions/eLogLevelTypes.ts",".././src/core.logging/src/loggingOptions.ts",".././src/core.packages/index.ts",".././src/core.packages/src/definitions/ePackageResponseErrors.ts",".././src/core.packages/src/definitions/ePackageSourceTypes.ts",".././src/core.packages/src/definitions/ePackageVersionTypes.ts",".././src/core.packages/src/definitions/iPackageDependency.ts",".././src/core.packages/src/factories/packageDocumentFactory.ts",".././src/core.packages/src/factories/packageRequestFactory.ts",".././src/core.packages/src/factories/packageResponseFactory.ts",".././src/core.packages/src/helpers/versionHelpers.ts",".././src/core.packages/src/models/packageResponse.ts",".././src/core.packages/src/parsers/jsonPackageParser.ts",".././src/core.packages/src/parsers/yamlPackageParser.ts",".././src/core.providers/index.ts",".././src/core.providers/src/definitions/eProviderSupport.ts",".././src/core.suggestions/index.ts",".././src/core.suggestions/src/definitions/eSuggestionFlags.ts",".././src/core.suggestions/src/definitions/eSuggestionStatus.ts",".././src/core.suggestions/src/suggestionFactory.ts",".././src/core.suggestions/src/suggestionUtils.ts",".././src/infrastructure.clients/index.ts",".././src/infrastructure.clients/src/httpClient.ts",".././src/infrastructure.clients/src/httpClientFactory.ts",".././src/infrastructure.clients/src/processClient.ts",".././src/infrastructure.clients/src/processClientFactory.ts",".././src/infrastructure.configuration/index.ts",".././src/infrastructure.configuration/src/vscodeConfig.ts",".././src/infrastructure.logging/index.ts",".././src/infrastructure.logging/src/loggerFactory.ts",".././src/infrastructure.logging/src/transports/outputChannelTransport.ts",".././src/infrastructure.providers sync ^\\.\\/.*\\/index$",".././src/infrastructure.providers/composer/index.ts",".././src/infrastructure.providers/composer/src/composerClient.ts",".././src/infrastructure.providers/composer/src/composerConfig.ts",".././src/infrastructure.providers/composer/src/composerContainer.ts",".././src/infrastructure.providers/composer/src/composerSuggestionProvider.ts",".././src/infrastructure.providers/composer/src/definitions/eComposerContributions.ts",".././src/infrastructure.providers/dotnet/index.ts",".././src/infrastructure.providers/dotnet/src/clients/dotnetCli.ts",".././src/infrastructure.providers/dotnet/src/clients/nugetPackageClient.ts",".././src/infrastructure.providers/dotnet/src/clients/nugetResourceClient.ts",".././src/infrastructure.providers/dotnet/src/definitions/eDotNetContributions.ts",".././src/infrastructure.providers/dotnet/src/definitions/eNugetContributions.ts",".././src/infrastructure.providers/dotnet/src/dotnetConfig.ts",".././src/infrastructure.providers/dotnet/src/dotnetContainer.ts",".././src/infrastructure.providers/dotnet/src/dotnetSuggestionProvider.ts",".././src/infrastructure.providers/dotnet/src/dotnetUtils.ts",".././src/infrastructure.providers/dotnet/src/dotnetXmlParserFactory.ts",".././src/infrastructure.providers/dotnet/src/options/nugetOptions.ts",".././src/infrastructure.providers/dub/index.ts",".././src/infrastructure.providers/dub/src/definitions/eDubContributions.ts",".././src/infrastructure.providers/dub/src/dubClient.ts",".././src/infrastructure.providers/dub/src/dubConfig.ts",".././src/infrastructure.providers/dub/src/dubContainer.ts",".././src/infrastructure.providers/dub/src/dubSuggestionProvider.ts",".././src/infrastructure.providers/jspm/index.ts",".././src/infrastructure.providers/jspm/src/jspmConfig.ts",".././src/infrastructure.providers/jspm/src/jspmContainer.ts",".././src/infrastructure.providers/jspm/src/jspmPackageParser.ts",".././src/infrastructure.providers/jspm/src/jspmSuggestionProvider.ts",".././src/infrastructure.providers/maven/index.ts",".././src/infrastructure.providers/maven/src/clients/mavenClient.ts",".././src/infrastructure.providers/maven/src/clients/mvnCli.ts",".././src/infrastructure.providers/maven/src/definitions/eMavenContributions.ts",".././src/infrastructure.providers/maven/src/mavenConfig.ts",".././src/infrastructure.providers/maven/src/mavenContainer.ts",".././src/infrastructure.providers/maven/src/mavenSuggestionProvider.ts",".././src/infrastructure.providers/maven/src/mavenXmlParserFactory.ts",".././src/infrastructure.providers/npm/index.ts",".././src/infrastructure.providers/npm/src/clients/githubClient.ts",".././src/infrastructure.providers/npm/src/clients/npmPackageClient.ts",".././src/infrastructure.providers/npm/src/clients/pacoteClient.ts",".././src/infrastructure.providers/npm/src/definitions/eGitHubContributions.ts",".././src/infrastructure.providers/npm/src/definitions/eNpmContributions.ts",".././src/infrastructure.providers/npm/src/factories/packageFactory.ts",".././src/infrastructure.providers/npm/src/models/npaSpec.ts",".././src/infrastructure.providers/npm/src/npmConfig.ts",".././src/infrastructure.providers/npm/src/npmContainer.ts",".././src/infrastructure.providers/npm/src/npmSuggestionProvider.ts",".././src/infrastructure.providers/npm/src/npmUtils.ts",".././src/infrastructure.providers/npm/src/options/githubOptions.ts",".././src/infrastructure.providers/pub/index.ts",".././src/infrastructure.providers/pub/src/definitions/ePubContributions.ts",".././src/infrastructure.providers/pub/src/pubClient.ts",".././src/infrastructure.providers/pub/src/pubConfig.ts",".././src/infrastructure.providers/pub/src/pubContainer.ts",".././src/infrastructure.providers/pub/src/pubSuggestionProvider.ts",".././src/infrastructure.providers/pub/src/pubUtils.ts",".././src/presentation.extension/index.ts",".././src/presentation.extension/src/commands/iconCommands.ts",".././src/presentation.extension/src/commands/suggestionCommands.ts",".././src/presentation.extension/src/container/registerSuggestionProviders.ts",".././src/presentation.extension/src/container/registerVersionLensProviders.ts",".././src/presentation.extension/src/definitions/eIconCommandContributions.ts",".././src/presentation.extension/src/definitions/eStateContributions.ts",".././src/presentation.extension/src/definitions/eStatusesContributions.ts",".././src/presentation.extension/src/definitions/eSuggestionCommandContributions.ts",".././src/presentation.extension/src/definitions/eSuggestionContributions.ts",".././src/presentation.extension/src/definitions/eSuggestionIndicators.ts",".././src/presentation.extension/src/events/textDocumentEvents.ts",".././src/presentation.extension/src/events/textEditorEvents.ts",".././src/presentation.extension/src/helpers/commandHelpers.ts",".././src/presentation.extension/src/helpers/installedStatusHelpers.ts",".././src/presentation.extension/src/lenses/suggestionCommandFactory.ts",".././src/presentation.extension/src/lenses/versionLens.ts",".././src/presentation.extension/src/lenses/versionLensFactory.ts",".././src/presentation.extension/src/lenses/versionLensProvider.ts",".././src/presentation.extension/src/options/statusesOptions.ts",".././src/presentation.extension/src/options/suggestionsOptions.ts",".././src/presentation.extension/src/state/contextState.ts",".././src/presentation.extension/src/state/versionLensState.ts",".././src/presentation.extension/src/versionLensContainer.ts",".././src/presentation.extension/src/versionLensExtension.ts","../external \"@npmcli/promise-spawn\"","../external \"awilix\"","../external \"fs\"","../external \"jsonc-parser\"","../external \"libnpmconfig\"","../external \"minimatch\"","../external \"npm-package-arg\"","../external \"pacote\"","../external \"path\"","../external \"request-light\"","../external \"semver\"","../external \"url\"","../external \"vscode\"","../external \"winston\"","../external \"xmldoc\"","../external \"yaml\""],"names":[],"mappings":"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","file":"extension.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/activate.ts\");\n","module.exports = require(\"../package.json\");","import { ExtensionContext, window } from 'vscode';\nimport { configureContainer } from 'presentation.extension';\n\nexport async function activate(context: ExtensionContext) {\n\n  configureContainer(context)\n    .then(container => {\n\n      const { version } = require('../package.json');\n\n      const {\n        logger,\n        loggingOptions,\n        textEditorEvents,\n      } = container.cradle;\n\n      // log general start up info\n      logger.info('version: %s', version);\n      logger.info('log level: %s', loggingOptions.level);\n      logger.info('log path: %s', context.logPath);\n\n      // resolve commands\n      container.resolve('iconCommands');\n      container.resolve('suggestionCommands');\n\n      // ensure icons are shown if editor is already active\n      textEditorEvents.onDidChangeActiveTextEditor(window.activeTextEditor);\n    });\n\n}","export * from './src/definitions/clientResponses';\n\nexport * from './src/definitions/eCachingContributions';\nexport * from './src/definitions/eHttpContributions';\nexport * from './src/definitions/eHttpClientRequestMethods';\n\nexport * from './src/definitions/iHttpOptions';\nexport * from './src/definitions/iCachingOptions';\nexport * from './src/definitions/iJsonHttpClient';\nexport * from './src/definitions/iHttpClient';\nexport * from './src/definitions/iProcessClient';\n\nexport * from './src/definitions/tHttpRequestOptions';\n\nexport * from './src/caching/expiryCacheMap';\nexport * from './src/options/cachingOptions';\nexport * from './src/options/httpOptions';\n\nexport * from './src/requests/abstractCachedRequest';\nexport * from './src/requests/jsonHttpClient';\n\n\nexport * as UrlHelpers from './src/helpers/urlHelpers';","import { ICachingOptions } from \"../definitions/iCachingOptions\";\n\nexport type CacheEntry<T> = {\n  expiryTime: number,\n  data: T\n};\n\ntype CacheMap<T> = {\n  [key: string]: CacheEntry<T>;\n};\n\nexport class ExpiryCacheMap<T> {\n\n  cachingOpts: ICachingOptions;\n\n  cacheMap: CacheMap<T>;\n\n  constructor(cachingOpts: ICachingOptions) {\n    this.cachingOpts = cachingOpts;\n    this.cacheMap = {};\n  }\n\n  clear() {\n    this.cacheMap = {};\n  }\n\n  hasExpired(key: string): boolean {\n    const entry = this.cacheMap[key];\n    if (!entry) return true;\n\n    return Date.now() > entry.expiryTime;\n  }\n\n  expire(key: string): T {\n    const entry = this.cacheMap[key];\n    if (entry) delete this.cacheMap[key];\n    return entry.data;\n  }\n\n  get(key: string): T {\n    const entry = this.cacheMap[key];\n    return entry && entry.data;\n  }\n\n  set(key: string, data: T): T {\n    const expiryTime = Date.now() + this.cachingOpts.duration;\n    const newEntry = {\n      expiryTime,\n      data\n    };\n    this.cacheMap[key] = newEntry;\n    return newEntry.data;\n  }\n\n}","import { KeyDictionary } from 'core.generics';\n\nexport enum ClientResponseSource {\n  remote = 'remote',\n  cache = 'cache',\n  local = 'local'\n}\n\nexport type ClientResponse<TStatus, TData> = {\n  source: ClientResponseSource;\n  status: TStatus;\n  data: TData;\n  rejected?: boolean;\n}\n\nexport type HttpClientResponse = ClientResponse<number, string>;\n\nexport type JsonClientResponse = ClientResponse<number, KeyDictionary<any>>;\n\nexport type ProcessClientResponse = ClientResponse<string, string>;","export enum CachingContributions {\n  CacheDuration = 'duration',\n}","export enum HttpClientRequestMethods {\n  get = 'GET',\n  head = 'HEAD'\n}\n","export enum HttpContributions {\n  StrictSSL = 'strictSSL'\n}","import { KeyStringDictionary } from 'core.generics';\n\nexport enum RegistryProtocols {\n  file = 'file:',\n  http = 'http:',\n  https = 'https:',\n}\n\nexport function getProtocolFromUrl(url: string): RegistryProtocols {\n  const { parse } = require('url');\n  const sourceUrl = parse(url);\n  const registryProtocol = sourceUrl.protocol === null ?\n    RegistryProtocols.file :\n    RegistryProtocols[sourceUrl.protocol.substr(0, sourceUrl.protocol.length - 1)];\n\n  return registryProtocol || RegistryProtocols.file;\n}\n\nexport function createUrl(baseUrl: string, queryParams: KeyStringDictionary): string {\n  const query = buildQueryParams(queryParams);\n\n  const slashedUrl = query.length > 0 ?\n    stripEndSlash(baseUrl) :\n    baseUrl;\n\n  return slashedUrl + query;\n}\n\nfunction buildQueryParams(queryParams: KeyStringDictionary): string {\n  let query = '';\n  if (queryParams) {\n    query = Object.keys(queryParams)\n      .map(key => `${key}=${queryParams[key]}`)\n      .join('&');\n    query = (query.length > 0) ? '?' + query : '';\n  }\n  return query;\n}\n\nfunction stripEndSlash(url: string): string {\n  return url.endsWith('/') ? url.substr(url.length - 1) : url;\n}\n\nexport function ensureEndSlash(url: string): string {\n  return url.endsWith('/') ? url : url + '/';\n}","import { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { Nullable } from 'core.generics';\n\nimport { CachingContributions } from '../definitions/eCachingContributions';\nimport { ICachingOptions } from \"../definitions/iCachingOptions\";\n\nexport class CachingOptions extends OptionsWithFallback\n  implements ICachingOptions {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get duration(): number {\n    const durationMin = this.getOrDefault<number>(\n      CachingContributions.CacheDuration,\n      0\n    );\n    // convert to milliseconds\n    return durationMin * 60000;\n  }\n\n}","import { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { IHttpOptions, HttpContributions } from 'core.clients';\nimport { Nullable } from 'core.generics';\n\nexport class HttpOptions extends OptionsWithFallback implements IHttpOptions {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get strictSSL(): boolean {\n    return this.getOrDefault<boolean>(\n      HttpContributions.StrictSSL,\n      true\n    );\n  }\n\n}","import { ExpiryCacheMap } from '../caching/expiryCacheMap';\n\nimport { ICachingOptions } from \"../definitions/iCachingOptions\";\nimport {\n  ClientResponse,\n  ClientResponseSource\n} from \"../definitions/clientResponses\";\n\nexport abstract class AbstractCachedRequest<TStatus, TData> {\n\n  cache: ExpiryCacheMap<ClientResponse<TStatus, TData>>;\n\n  constructor(cachingOpts: ICachingOptions) {\n    this.cache = new ExpiryCacheMap(cachingOpts);\n  }\n\n  createCachedResponse(\n    cacheKey: string,\n    status: TStatus,\n    data: TData,\n    rejected: boolean = false,\n    source: ClientResponseSource = ClientResponseSource.remote\n  ): ClientResponse<TStatus, TData> {\n    const cacheEnabled = this.cache.cachingOpts.duration > 0;\n\n    if (cacheEnabled) {\n      //  cache reponse (don't return, keep immutable)\n      this.cache.set(\n        cacheKey,\n        {\n          source: ClientResponseSource.cache,\n          status,\n          data,\n          rejected\n        }\n      );\n    }\n\n    // return original fetched data\n    return {\n      source,\n      status,\n      data,\n      rejected\n    };\n  }\n\n}","import { KeyStringDictionary } from 'core.generics';\n\nimport {\n  HttpClientResponse,\n  JsonClientResponse,\n  HttpClientRequestMethods,\n  IJsonHttpClient,\n  IHttpClient\n} from 'core.clients';\n\nexport class JsonHttpClient implements IJsonHttpClient {\n\n  httpClient: IHttpClient;\n\n  constructor(httpClient: IHttpClient) {\n    this.httpClient = httpClient;\n  }\n\n  async request(\n    method: HttpClientRequestMethods,\n    url: string,\n    query: KeyStringDictionary = {},\n    headers: KeyStringDictionary = {}\n  ): Promise<JsonClientResponse> {\n\n    return this.httpClient.request(method, url, query, headers)\n      .then(function (response: HttpClientResponse) {\n        return {\n          source: response.source,\n          status: response.status,\n          data: JSON.parse(response.data),\n        }\n      });\n\n  }\n\n}","export * from './src/definitions/iConfig';\nexport * from './src/definitions/iOptions';\nexport * from './src/options';\nexport * from './src/optionsWithFallback';","import { IFrozenOptions, IOptions } from 'core.configuration';\n\nexport abstract class Options implements IOptions {\n\n  protected section: string;\n\n  config: IFrozenOptions;\n\n  constructor(config: IFrozenOptions, section: string) {\n    this.config = config;\n    this.section = (section.length > 0) ? section + '.' : '';\n  }\n\n  get<T>(key: string): T {\n    return this.config.get(`${this.section}${key}`);\n  }\n\n  defrost(): void {\n    this.config.defrost();\n  }\n\n}","import { Nullable } from 'core.generics';\nimport { IFrozenOptions, Options, IOptionsWithDefaults } from 'core.configuration';\n\nexport class OptionsWithFallback extends Options\n  implements IOptionsWithDefaults {\n\n  protected fallbackSection: Nullable<string>;\n\n  constructor(config: IFrozenOptions, section: string, fallbackSection: Nullable<string> = null) {\n    super(config, section);\n    this.fallbackSection = fallbackSection;\n  }\n\n  get<T>(key: string): T {\n    // attempt to get the section value\n    const sectionValue: T = this.config.get(`${this.section}${key}`);\n\n    // return section value\n    if (sectionValue !== null && sectionValue !== undefined) return sectionValue;\n\n    // attempt to get fallback section value\n    let fallbackSectionValue: T;\n    if (this.fallbackSection !== null) {\n      fallbackSectionValue = this.config.get(`${this.fallbackSection}.${key}`);\n    }\n\n    // return fallback key value\n    return fallbackSectionValue;\n  }\n\n  getOrDefault<T>(key: string, defaultValue: T): T {\n    // attempt to get the section value\n    const value: T = this.get(key);\n\n    // return key value\n    if (value !== null && value !== undefined) return value;\n\n    // return default value\n    return defaultValue;\n  }\n\n}","export * from './src/definitions/eLogLevelTypes';\nexport * from './src/definitions/iLoggingOptions';\nexport * from './src/definitions/iLogger';\nexport * from './src/definitions/tChildLoggerOptions';\n\nexport * from './src/loggingOptions';","export enum LogLevelTypes {\n  Error = \"error\",\n  Info = \"info\",\n  Debug = \"debug\"\n}\n","import { LogLevelTypes } from 'core.logging';\nimport { IFrozenOptions, Options } from 'core.configuration';\n\nimport { ILoggingOptions } from './definitions/iLoggingOptions';\n\nexport enum LoggingContributions {\n  LoggingLevel = 'level',\n}\n\nexport class LoggingOptions extends Options implements ILoggingOptions {\n\n  constructor(config: IFrozenOptions, section: string) {\n    super(config, section);\n  }\n\n  get level(): LogLevelTypes {\n    return super.get<LogLevelTypes>(\n      LoggingContributions.LoggingLevel\n    );\n  }\n\n  get timestampFormat(): string { return 'YYYY-MM-DD HH:mm:ss' }\n\n}","export * from './src/definitions/ePackageResponseErrors';\nexport * from './src/definitions/ePackageSourceTypes';\nexport * from './src/definitions/ePackageVersionTypes';\n\nexport * from './src/definitions/iPackageClient';\nexport * from './src/definitions/iPackageDependency';\n\nexport * from './src/definitions/tPackageDependencyRange';\nexport * from './src/definitions/tPackageDocument';\nexport * from './src/definitions/tPackageIdentifier';\nexport * from './src/definitions/tPackageNameVersion';\nexport * from \"./src/definitions/tPackageRequest\";\nexport * from \"./src/definitions/tPackageResponseStatus\";\nexport * from './src/definitions/tSemverSpec';\n\nexport * as DocumentFactory from './src/factories/packageDocumentFactory';\nexport * as RequestFactory from './src/factories/packageRequestFactory';\nexport * as ResponseFactory from './src/factories/packageResponseFactory';\nexport * as VersionHelpers from './src/helpers/versionHelpers';\n\nexport * from './src/models/packageResponse';\n\nexport * from \"./src/parsers/jsonPackageParser\";\nexport * from \"./src/parsers/yamlPackageParser\";","export enum PackageResponseErrors {\n  None,\n  NotFound,\n  NotSupported,\n  GitNotFound,\n  InvalidVersion,\n  Unexpected\n};\n","export enum PackageSourceTypes {\n  Directory = 'directory',\n  File = 'file',\n  Git = 'git',\n  Github = 'github',\n  Registry = 'registry'\n}","export enum PackageVersionTypes {\n  Version = 'version',\n  Range = 'range',\n  Tag = 'tag',\n  Alias = 'alias',\n  Committish = 'committish'\n}\n","import { TPackageDependencyRange } from \"./tPackageDependencyRange\";\nimport { TPackageNameVersion } from \"./tPackageNameVersion\";\n\nexport interface IPackageDependency {\n\n  nameRange: TPackageDependencyRange;\n\n  versionRange: TPackageDependencyRange;\n\n  packageInfo: TPackageNameVersion;\n\n};","import { TPackageSuggestion, SuggestionFactory } from 'core.suggestions'\n\nimport { PackageSourceTypes } from \"../definitions/ePackageSourceTypes\";\nimport { PackageVersionTypes } from \"../definitions/ePackageVersionTypes\";\nimport { TPackageDocument } from \"../definitions/tPackageDocument\";\nimport { TPackageIdentifier } from \"../definitions/tPackageIdentifier\";\nimport { TPackageResponseStatus } from \"../definitions/tPackageResponseStatus\";\nimport { TPackageRequest } from '../definitions/tPackageRequest';\n\nexport function create(\n  source: PackageSourceTypes,\n  request: TPackageRequest<any>,\n  response: TPackageResponseStatus,\n  suggestions: Array<TPackageSuggestion>\n): TPackageDocument {\n\n  const { providerName, package: requested } = request;\n\n  return {\n    providerName,\n    source,\n    type: null,\n    requested,\n    resolved: null,\n    response,\n    suggestions\n  };\n\n}\n\nexport function createInvalidVersion(\n  providerName: string,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  type: PackageVersionTypes\n): TPackageDocument {\n  const source: PackageSourceTypes = PackageSourceTypes.Registry;\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createInvalid(''),\n    SuggestionFactory.createLatest(),\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}\n\nexport function createNoMatch(\n  providerName: string,\n  source: PackageSourceTypes,\n  type: PackageVersionTypes,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  latestVersion?: string\n): TPackageDocument {\n\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createNoMatch(),\n    SuggestionFactory.createLatest(latestVersion),\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}\n\nexport function createFixed(\n  providerName: string,\n  source: PackageSourceTypes,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  type: PackageVersionTypes,\n  fixedVersion: string\n): TPackageDocument {\n\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createFixedStatus(fixedVersion)\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}","import {\n  RequestFactory,\n  ResponseFactory,\n  IPackageDependency,\n  TPackageRequest,\n  IPackageClient,\n  PackageResponse,\n} from 'core.packages';\n\nexport async function executeDependencyRequests<TClientData>(\n  packagePath: string,\n  client: IPackageClient<TClientData>,\n  clientData: TClientData,\n  dependencies: Array<IPackageDependency>,\n): Promise<Array<PackageResponse>> {\n\n  const { providerName } = client.config;\n\n  const results = [];\n  const promises = dependencies.map(\n    function (dependency) {\n\n      // build the client request\n      const { name, version } = dependency.packageInfo;\n      const clientRequest: TPackageRequest<TClientData> = {\n        providerName,\n        clientData,\n        dependency,\n        package: {\n          name,\n          version,\n          path: packagePath,\n        },\n        attempt: 0\n      };\n\n      // execute request\n      const promisedDependency = RequestFactory.executePackageRequest(\n        client,\n        clientRequest\n      );\n\n      // flatten responses\n      return promisedDependency.then(\n        function (responses) {\n          if (Array.isArray(responses))\n            results.push(...responses)\n          else\n            results.push(responses);\n        }\n      );\n\n    }\n\n  );\n\n  return Promise.all(promises).then(_ => results)\n}\n\nexport async function executePackageRequest<TClientData>(\n  client: IPackageClient<TClientData>,\n  request: TPackageRequest<TClientData>,\n): Promise<Array<PackageResponse> | PackageResponse> {\n\n  client.logger.debug(`Queued package: %s`, request.package.name);\n\n  return client.fetchPackage(request)\n    .then(function (response) {\n\n      client.logger.info(\n        'Fetched %s package from %s: %s@%s',\n        response.providerName,\n        response.response.source,\n        request.package.name,\n        request.package.version\n      );\n\n      return ResponseFactory.createSuccess(request, response);\n    })\n    .catch(function (error: PackageResponse) {\n\n      client.logger.error(\n        `%s caught an exception.\\n Package: %j\\n Error: %j`,\n        executePackageRequest.name,\n        request.package,\n        error\n      );\n\n      return Promise.reject(error);\n    })\n}","import { ClientResponseSource } from 'core.clients';\nimport { TPackageSuggestion } from \"core.suggestions\";\n\nimport { TPackageResponseStatus } from \"../definitions/tPackageResponseStatus\";\nimport { TPackageRequest } from \"../definitions/tPackageRequest\";\nimport { TPackageDocument } from \"../definitions/tPackageDocument\";\nimport { PackageResponse } from \"../models/packageResponse\";\n\nexport function createResponseStatus(source: ClientResponseSource, status: number): TPackageResponseStatus {\n  return {\n    source,\n    status\n  };\n}\n\nexport function createSuccess<TClientData>(\n  request: TPackageRequest<TClientData>,\n  response: TPackageDocument\n): Array<PackageResponse> {\n  // map the documents to responses\n  return response.suggestions.map(\n    function (suggestion: TPackageSuggestion, order: number): PackageResponse {\n      return {\n        providerName: response.providerName,\n        source: response.source,\n        type: response.type,\n        nameRange: request.dependency.nameRange,\n        versionRange: request.dependency.versionRange,\n        order,\n        requested: response.requested,\n        resolved: response.resolved,\n        suggestion,\n      };\n    }\n  );\n}\n","import { KeyStringArrayDictionary } from 'core.generics';\n\nimport { TSemverSpec } from \"../definitions/tSemverSpec\";\nimport { TPackageNameVersion } from \"../definitions/tPackageNameVersion\";\nimport { PackageVersionTypes } from \"../definitions/ePackageVersionTypes\";\n\nexport const formatTagNameRegex = /^[^0-9\\-]*/;\nexport const loosePrereleases = { loose: true, includePrerelease: true };\n\nexport function filterPrereleasesFromDistTags(distTags: { [key: string]: string }): Array<string> {\n  const { prerelease } = require(\"semver\");\n  const prereleases: Array<string> = [];\n  Object.keys(distTags)\n    .forEach((key: string) => {\n      if (prerelease(distTags[key])) prereleases.push(distTags[key]);\n    });\n\n  return prereleases;\n}\n\nexport function extractVersionsFromMap(versions: Array<TPackageNameVersion>): Array<string> {\n  return versions.map(function (pnv: TPackageNameVersion) {\n    return pnv.version;\n  });\n}\n\nexport function extractTaggedVersions(versions: Array<string>): Array<TPackageNameVersion> {\n  const { prerelease } = require('semver');\n\n  const results: Array<TPackageNameVersion> = [];\n  versions.forEach(function (version) {\n    const prereleaseComponents = prerelease(version);\n    const isPrerelease = !!prereleaseComponents && prereleaseComponents.length > 0;\n    if (isPrerelease) {\n      const regexResult = formatTagNameRegex.exec(prereleaseComponents[0]);\n\n      let name = regexResult[0].toLowerCase();\n\n      // capture cases like x.x.x-x.x.x\n      if (!name) name = prereleaseComponents.join('.');\n\n      results.push({\n        name,\n        version\n      })\n    }\n  });\n\n  return results;\n}\n\nexport function splitReleasesFromArray(versions: Array<string>): { releases: Array<string>, prereleases: Array<string> } {\n  const { prerelease } = require('semver');\n  const releases: Array<string> = [];\n  const prereleases: Array<string> = [];\n\n  versions.forEach(function (version: string) {\n    if (prerelease(version))\n      prereleases.push(version);\n    else\n      releases.push(version);\n  });\n\n  return { releases, prereleases };\n}\n\nexport function lteFromArray(versions: Array<string>, version: string) {\n  const { lte } = require('semver');\n  return versions.filter(\n    function (testVersion: string) {\n      return lte(testVersion, version);\n    }\n  );\n}\n\nexport function removeFourSegmentVersionsFromArray(versions: Array<string>): Array<string> {\n  return versions.filter(function (version: string) {\n    return isFourSegmentedVersion(version) === false;\n  });\n}\n\nexport function isFixedVersion(versionToCheck: string): boolean {\n  const { Range, valid } = require('semver');\n  const testRange = new Range(versionToCheck, loosePrereleases);\n  return valid(versionToCheck) !== null && testRange.set[0][0].operator === \"\";\n}\n\nconst isfourSegmentVersionRegex = /^(\\d+\\.)(\\d+\\.)(\\d+\\.)(\\*|\\d+)$/g;\nexport function isFourSegmentedVersion(versionToCheck: string): boolean {\n  return isfourSegmentVersionRegex.test(versionToCheck);\n}\n\nconst commonReleaseIdentities = [\n  ['legacy'],\n  ['alpha', 'preview', 'a'],\n  ['beta', 'b'],\n  ['next'],\n  ['milestone', 'm'],\n  ['rc', 'cr'],\n  ['snapshot'],\n  ['release', 'final', 'ga'],\n  ['sp']\n];\nexport function friendlifyPrereleaseName(prereleaseName: string): string {\n  const filteredNames = [];\n  commonReleaseIdentities.forEach(\n    function (group) {\n      return group.forEach(\n        commonName => {\n          const exp = new RegExp(`(.+-)${commonName}`, 'i');\n          if (exp.test(prereleaseName.toLowerCase())) {\n            filteredNames.push(commonName);\n          }\n        }\n      );\n    }\n  );\n\n  return (filteredNames.length === 0) ?\n    null :\n    filteredNames[0];\n}\n\nexport function parseSemver(packageVersion: string): TSemverSpec {\n  const { valid, validRange } = require('semver');\n  const isVersion = valid(packageVersion, loosePrereleases);\n  const isRange = validRange(packageVersion, loosePrereleases);\n  return {\n    rawVersion: packageVersion,\n    type: !!isVersion ?\n      PackageVersionTypes.Version :\n      !!isRange ? PackageVersionTypes.Range :\n        null,\n  };\n}\n\nexport function filterPrereleasesGtMinRange(versionRange: string, prereleases: Array<string>): Array<string> {\n  const {\n    SemVer,\n    gt,\n    maxSatisfying,\n    minVersion,\n    validRange,\n  } = require('semver');\n\n  const prereleaseGroupMap: KeyStringArrayDictionary = {};\n\n  // for each prerelease version;\n  // group prereleases by x.x.x-{name}*.x\n  prereleases.forEach(function (prereleaseVersion) {\n    const spec = new SemVer(prereleaseVersion, loosePrereleases)\n    const prereleaseKey = friendlifyPrereleaseName(prereleaseVersion) ||\n      spec.prerelease[0];\n\n    prereleaseGroupMap[prereleaseKey] = prereleaseGroupMap[prereleaseKey] || [];\n    prereleaseGroupMap[prereleaseKey].push(prereleaseVersion);\n  });\n\n  // check we have a valid range (handles non-semver errors)\n  const isValidRange = validRange(versionRange, loosePrereleases) !== null;\n  const minVersionFromRange = isValidRange ?\n    minVersion(versionRange, loosePrereleases) :\n    versionRange;\n\n  const gtfn = isValidRange ? gt : maxSatisfying;\n\n  // for each group;\n  // extract versions that are greater than the min-range (one from each group)\n  const filterPrereleases = [];\n  Object.keys(prereleaseGroupMap)\n    .forEach(function (prereleaseKey) {\n      const versions = prereleaseGroupMap[prereleaseKey];\n      const testMaxVersion = versions[versions.length - 1];\n      const isPrereleaseGt = gtfn(testMaxVersion, minVersionFromRange, loosePrereleases);\n      if (isPrereleaseGt) filterPrereleases.push(testMaxVersion)\n    });\n\n  return filterPrereleases;\n}\n\nexport function filterSemverVersions(versions: Array<string>): Array<string> {\n  const { validRange } = require('semver');\n  const semverVersions = [];\n  versions.forEach(version => {\n    if (validRange(version, loosePrereleases)) semverVersions.push(version);\n  });\n  return semverVersions;\n}\n\nexport const extractSymbolFromVersionRegex = /^([^0-9]*)?.*$/;\nexport const semverLeadingChars = ['^', '~', '<', '<=', '>', '>=', '~>'];\nexport function formatWithExistingLeading(existingVersion, newVersion) {\n  const regExResult = extractSymbolFromVersionRegex.exec(existingVersion);\n  const leading = regExResult && regExResult[1];\n  if (!leading || !semverLeadingChars.includes(leading))\n    return newVersion;\n\n  return `${leading}${newVersion}`;\n}","import { TPackageSuggestion } from 'core.suggestions';\n\nimport { PackageSourceTypes } from '../definitions/ePackageSourceTypes';\nimport { PackageVersionTypes } from '../definitions/ePackageVersionTypes';\nimport { PackageResponseErrors } from '../definitions/ePackageResponseErrors';\nimport { TPackageNameVersion } from '../definitions/tPackageNameVersion';\nimport { TPackageIdentifier } from '../definitions/tPackageIdentifier';\nimport { TPackageResponseStatus } from '../definitions/tPackageResponseStatus';\nimport { TPackageDependencyRange } from '../definitions/tPackageDependencyRange';\n\nexport class PackageResponse {\n  providerName: string;\n  requested: TPackageIdentifier;\n\n  nameRange: TPackageDependencyRange;\n  versionRange: TPackageDependencyRange;\n  order: number;\n\n  error?: PackageResponseErrors;\n  errorMessage?: string;\n  source?: PackageSourceTypes;\n  response?: TPackageResponseStatus;\n  type?: PackageVersionTypes;\n  resolved?: TPackageNameVersion;\n  suggestion?: TPackageSuggestion;\n}","// vscode references\nimport { IPackageDependency } from \"../definitions/iPackageDependency\";\n\nexport function extractPackageDependenciesFromJson(\n  json: string, filterPropertyNames: Array<string>\n): Array<IPackageDependency> {\n  const jsonErrors = [];\n  const jsonParser = require(\"jsonc-parser\");\n  const jsonTree = jsonParser.parseTree(json, jsonErrors);\n  if (!jsonTree || jsonTree.children.length === 0 || jsonErrors.length > 0) return [];\n  return extractFromNodes(jsonTree.children, filterPropertyNames);\n}\n\nexport function extractFromNodes(topLevelNodes, includePropertyNames: string[]): IPackageDependency[] {\n  const collector = [];\n\n  topLevelNodes.forEach(\n    function (node) {\n      const [keyEntry, valueEntry] = node.children;\n      if (includePropertyNames.includes(keyEntry.value) === false) return;\n      collectDependencyNodes(valueEntry.children, null, '', collector);\n    }\n  )\n\n  return collector\n}\n\nfunction collectDependencyNodes(nodes, parentKey, filterName: string, collector = []) {\n  nodes.forEach(\n    function (node) {\n      const [keyEntry, valueEntry] = node.children;\n\n      if (valueEntry.type == \"string\" &&\n        (filterName.length === 0 || keyEntry.value === filterName)) {\n        const dependencyLens = createFromProperty(parentKey || keyEntry, valueEntry);\n        collector.push(dependencyLens);\n      } else if (valueEntry.type == \"object\") {\n        collectDependencyNodes(valueEntry.children, keyEntry, 'version', collector)\n      }\n    }\n  )\n}\n\nfunction createFromProperty(keyEntry, valueEntry): IPackageDependency {\n  const nameRange = {\n    start: keyEntry.offset,\n    end: keyEntry.offset,\n  }\n\n  // +1 and -1 to be inside quotes\n  const versionRange = {\n    start: valueEntry.offset + 1,\n    end: valueEntry.offset + valueEntry.length - 1,\n  }\n\n  const packageInfo = {\n    name: keyEntry.value,\n    version: valueEntry.value\n  }\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo\n  }\n}\n","import { IPackageDependency } from \"../definitions/iPackageDependency\";\n\ntype YamlOptions = {\n  hasCrLf: boolean,\n  filterPropertyNames: Array<string>,\n}\n\nexport function extractPackageDependenciesFromYaml(\n  yaml: string,\n  filterPropertyNames: Array<string>\n): Array<IPackageDependency> {\n  const { Document, parseCST } = require('yaml');\n\n  // verbose parsing to handle CRLF scenarios\n  const cst = parseCST(yaml)\n\n  // create and parse the document\n  const yamlDoc = new Document({ keepCstNodes: true }).parse(cst[0])\n  if (!yamlDoc || !yamlDoc.contents || yamlDoc.errors.length > 0) return [];\n\n  const opts = {\n    hasCrLf: yaml.indexOf('\\r\\n') > 0,\n    filterPropertyNames,\n    yaml,\n  };\n\n  return extractDependenciesFromNodes(yamlDoc.contents.items, opts);\n}\n\nexport function extractDependenciesFromNodes(topLevelNodes, opts: YamlOptions): IPackageDependency[] {\n  const collector = [];\n\n  topLevelNodes.forEach(\n    function (pair) {\n      if (opts.filterPropertyNames.includes(pair.key.value) === false) return;\n      if (pair.value === null) return;\n      collectDependencyNodes(pair.value.items, opts, collector);\n    }\n  )\n\n  return collector\n}\n\nfunction collectDependencyNodes(nodes, opts: YamlOptions, collector: Array<IPackageDependency>) {\n  nodes.forEach(\n    function (pair) {\n      // node may be in the form \"no_version_dep:\", which we will indicate as the latest\n      if (!pair.value || (pair.value.type === 'PLAIN' && !pair.value.value)) {\n        const keyRange = getRangeFromCstNode(pair.key.cstNode, opts);\n        pair.value = {\n          range: [\n            keyRange.end + 2,\n            keyRange.end + 2,\n          ],\n          value: '',\n          type: null\n        }\n      }\n\n      if (pair.value.type === 'MAP') {\n        createDependencyLensFromMapType(pair.value.items, pair.key, opts, collector);\n      } else if (typeof pair.value.value === 'string') {\n        const dependencyLens = createDependencyLensFromPlainType(pair, opts);\n        collector.push(dependencyLens);\n      }\n    }\n  )\n}\n\nexport function createDependencyLensFromMapType(\n  nodes, parentKey, opts: YamlOptions, collector: Array<IPackageDependency>\n) {\n  nodes.forEach(\n    function (pair) {\n      // ignore empty entries\n      if (!pair.value) return;\n\n      if (pair.key.value === \"version\") {\n        const keyRange = getRangeFromCstNode(parentKey.cstNode, opts);\n        const nameRange = createRange(\n          keyRange.start,\n          keyRange.start,\n          null\n        );\n        const valueRange = getRangeFromCstNode(pair.value.cstNode, opts);\n        const versionRange = createRange(\n          valueRange.start,\n          valueRange.end,\n          pair.value.type\n        );\n        const packageInfo = {\n          name: parentKey.value,\n          version: pair.value.value\n        };\n        collector.push({\n          nameRange,\n          versionRange,\n          packageInfo\n        });\n      }\n    }\n  )\n\n}\n\nexport function createDependencyLensFromPlainType(pair, opts: YamlOptions): IPackageDependency {\n  const keyRange = getRangeFromCstNode(pair.key.cstNode, opts);\n  const nameRange = createRange(\n    keyRange.start,\n    keyRange.start,\n    null\n  );\n\n  let valueRange\n  if (pair.value.cstNode) {\n    valueRange = getRangeFromCstNode(pair.value.cstNode, opts);\n  } else {\n    // handle blank values\n    const start = pair.value.range[0];\n    valueRange = { start, end: start }\n  }\n\n  const versionRange = createRange(\n    valueRange.start,\n    valueRange.end,\n    pair.value.type\n  );\n\n  const packageInfo = {\n    name: pair.key.value,\n    version: pair.value.value\n  };\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo\n  }\n}\n\nfunction createRange(start, end, valueType: string) {\n  // +1 and -1 to be inside quotes\n  const quoted = valueType === \"QUOTE_SINGLE\" || valueType === \"QUOTE_DOUBLE\";\n  return {\n    start: start + (quoted ? 1 : 0),\n    end: end - (quoted ? 1 : 0),\n  }\n}\n\nfunction getRangeFromCstNode(cstNode, opts: YamlOptions) {\n  const crLfLineOffset = opts.hasCrLf ?\n    cstNode.rangeAsLinePos.start.line : 0;\n\n  const start = cstNode.range.start + crLfLineOffset;\n  const end = cstNode.range.end + crLfLineOffset;\n\n  return { start, end }\n}","export * from './src/definitions/iProviderConfig';\nexport * from './src/definitions/eProviderSupport';\nexport * from './src/definitions/tProviderFileMatcher';\nexport * from './src/definitions/iProviderModule';","export enum ProviderSupport {\n  Releases = 'releases',\n  Prereleases = 'prereleases',\n  InstalledStatuses = 'installedStatuses'\n}","export * from './src/definitions/eSuggestionFlags';\nexport * from './src/definitions/eSuggestionStatus';\nexport * from './src/definitions/iSuggestionProvider';\nexport * from './src/definitions/tSuggestion';\nexport * from './src/definitions/tSuggestionReplaceFunction';\n\nexport * from './src/suggestionUtils';\nexport * as SuggestionFactory from './src/suggestionFactory';","export enum SuggestionFlags {\n  // bitwise\n  status = 1,\n  release = 2,\n  prerelease = 4,\n  tag = 8\n}\n","export enum SuggestionStatus {\n  BadRequest = '400 bad request',\n  NotAuthorized = '401 not authorized',\n  Forbidden = '403 forbidden',\n  NotFound = 'package not found',\n  InternalServerError = '500 internal server error',\n  NotSupported = 'not supported',\n  ConnectionRefused = 'connection refused',\n  Invalid = 'invalid entry',\n  NoMatch = 'no match',\n  Satisfies = 'satisfies',\n  Latest = 'latest',\n  LatestIsPrerelease = 'latest prerelease',\n  Fixed = 'fixed'\n}","import {\n  SuggestionFactory,\n  TPackageSuggestion,\n  SuggestionStatus,\n  SuggestionFlags\n} from \"core.suggestions\";\n\nimport { VersionHelpers } from \"core.packages\";\n\nexport function createSuggestions(\n  versionRange: string,\n  releases: string[],\n  prereleases: string[],\n  suggestedLatestVersion: string = null\n): Array<TPackageSuggestion> {\n  const { maxSatisfying, compareLoose } = require(\"semver\");\n  const suggestions: Array<TPackageSuggestion> = [];\n\n  // check for a release\n  let satisfiesVersion = maxSatisfying(\n    releases,\n    versionRange,\n    VersionHelpers.loosePrereleases\n  );\n  if (!satisfiesVersion && versionRange.indexOf('-') > -1) {\n    // lookup prereleases\n    satisfiesVersion = maxSatisfying(\n      prereleases,\n      versionRange,\n      VersionHelpers.loosePrereleases\n    );\n  }\n\n  // get the latest release\n  const latestVersion = suggestedLatestVersion || releases[releases.length - 1];\n  const isLatest = latestVersion === satisfiesVersion;\n\n  const noSuggestionNeeded = versionRange.includes(satisfiesVersion) ||\n    versionRange.includes(suggestedLatestVersion);\n\n  if (releases.length === 0 && prereleases.length === 0)\n    // no match\n    suggestions.push(createNoMatch())\n  else if (!satisfiesVersion)\n    // no match\n    suggestions.push(\n      createNoMatch(),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    )\n  else if (isLatest && noSuggestionNeeded)\n    // latest\n    suggestions.push(createMatchesLatest(versionRange));\n  else if (isLatest)\n    suggestions.push(\n      // satisfies latest\n      createSatisifiesLatest(),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n  else if (satisfiesVersion && VersionHelpers.isFixedVersion(versionRange))\n    suggestions.push(\n      // fixed\n      createFixedStatus(versionRange),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n  else if (satisfiesVersion)\n    suggestions.push(\n      // satisfies >x.y.z <x.y.z\n      createSuggestion(\n        SuggestionStatus.Satisfies,\n        satisfiesVersion,\n        noSuggestionNeeded ?\n          SuggestionFlags.status :\n          SuggestionFlags.release\n      ),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n\n  // roll up prereleases\n  const maxSatisfyingPrereleases = VersionHelpers.filterPrereleasesGtMinRange(\n    versionRange,\n    prereleases\n  ).sort(compareLoose);\n\n  // group prereleases (latest first)\n  const taggedVersions = VersionHelpers.extractTaggedVersions(maxSatisfyingPrereleases);\n  for (let index = taggedVersions.length - 1; index > -1; index--) {\n    const pvn = taggedVersions[index];\n    if (pvn.name === 'latest') break;\n    if (pvn.version === satisfiesVersion) break;\n    if (pvn.version === latestVersion) break;\n    if (versionRange.includes(pvn.version)) break;\n\n    suggestions.push({\n      name: pvn.name,\n      version: pvn.version,\n      flags: SuggestionFlags.prerelease\n    });\n  }\n\n  return suggestions;\n}\n\nexport function createFromHttpStatus(status: number | string): TPackageSuggestion {\n\n  if (status == 400)\n    return SuggestionFactory.createBadRequest();\n  else if (status == 401)\n    return SuggestionFactory.createNotAuthorized();\n  else if (status == 403)\n    return SuggestionFactory.createForbidden();\n  else if (status == 404)\n    return SuggestionFactory.createNotFound();\n  else if (status == 500)\n    return SuggestionFactory.createInternalServerError();\n\n  return null;\n}\n\nexport function createNotFound(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotFound,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createInternalServerError(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.InternalServerError,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createConnectionRefused(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.ConnectionRefused,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createForbidden(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.Forbidden,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNotAuthorized(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotAuthorized,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createBadRequest(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.BadRequest,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createInvalid(requestedVersion: string): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.Invalid,\n    version: requestedVersion,\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNotSupported(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotSupported,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNoMatch(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NoMatch,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createLatest(requestedVersion?: string): TPackageSuggestion {\n  const isPrerelease = requestedVersion && requestedVersion.indexOf('-') !== -1;\n\n  const name = isPrerelease ?\n    SuggestionStatus.LatestIsPrerelease :\n    SuggestionStatus.Latest;\n\n  // treats requestedVersion as latest version\n  // if no requestedVersion then uses the 'latest' tag instead\n  return {\n    name,\n    version: requestedVersion || 'latest',\n    flags:\n      isPrerelease ?\n        SuggestionFlags.prerelease :\n        requestedVersion ?\n          SuggestionFlags.release :\n          SuggestionFlags.tag\n  };\n}\n\nexport function createMatchesLatest(latestVersion: string): TPackageSuggestion {\n  const isPrerelease = latestVersion && latestVersion.indexOf('-') !== -1;\n\n  const name = isPrerelease ?\n    SuggestionStatus.LatestIsPrerelease :\n    SuggestionStatus.Latest;\n\n  return {\n    name,\n    version: isPrerelease ? latestVersion : '',\n    flags: SuggestionFlags.status\n  };\n\n\n}\n\nexport function createSatisifiesLatest(): TPackageSuggestion {\n  return createSuggestion(\n    SuggestionStatus.Satisfies,\n    'latest',\n    SuggestionFlags.status\n  )\n}\n\nexport function createFixedStatus(version: string): TPackageSuggestion {\n  return createSuggestion(\n    SuggestionStatus.Fixed,\n    version,\n    SuggestionFlags.status\n  );\n}\n\nexport function createSuggestion(\n  name: string, version: string, flags: SuggestionFlags\n): TPackageSuggestion {\n  return { name, version, flags };\n}","import { basename } from 'path';\nimport * as  minimatch from 'minimatch';\n\nimport { PackageResponse, VersionHelpers } from 'core.packages';\n\nimport { ISuggestionProvider } from './definitions/iSuggestionProvider';\n\nexport function defaultReplaceFn(packageResponse: PackageResponse, newVersion: string): string {\n  return VersionHelpers.formatWithExistingLeading(\n    packageResponse.requested.version,\n    newVersion\n  );\n}\n\nexport function filtersProvidersByFileName(\n  fileName: string,\n  providers: Array<ISuggestionProvider>\n): Array<ISuggestionProvider> {\n\n  const filename = basename(fileName);\n\n  const filtered = providers.filter(\n    provider => minimatch(filename, provider.config.fileMatcher.pattern)\n  );\n\n  if (filtered.length === 0) return [];\n\n  return filtered;\n}","export * from './src/definitions/iXhrResponse';\nexport * from './src/definitions/iPromiseSpawn';\n\nexport * from './src/httpClient';\nexport * from './src/httpClientFactory';\nexport * from './src/processClient';\nexport * from './src/processClientFactory';","import { KeyStringDictionary } from 'core.generics';\nimport { ILogger } from 'core.logging';\nimport {\n  AbstractCachedRequest,\n  HttpClientResponse,\n  IHttpClient,\n  HttpClientRequestMethods,\n  HttpRequestOptions,\n  UrlHelpers,\n} from 'core.clients';\n\nimport { IXhrResponse } from './definitions/iXhrResponse';\n\n\nimport { XHRRequest } from 'request-light'\n\nexport class HttpClient extends AbstractCachedRequest<number, string>\n  implements IHttpClient {\n\n  logger: ILogger;\n\n  options: HttpRequestOptions;\n\n  xhr: XHRRequest;\n\n  constructor(xhr: XHRRequest, requestOptions: HttpRequestOptions, requestLogger: ILogger) {\n    super(requestOptions.caching);\n    this.logger = requestLogger;\n    this.options = requestOptions;\n    this.xhr = xhr;\n  }\n\n  async request(\n    method: HttpClientRequestMethods,\n    baseUrl: string,\n    query: KeyStringDictionary = {},\n    headers: KeyStringDictionary = {}\n  ): Promise<HttpClientResponse> {\n\n    const url = UrlHelpers.createUrl(baseUrl, query);\n    const cacheKey = method + '_' + url;\n\n    if (this.cache.cachingOpts.duration > 0 &&\n      this.cache.hasExpired(cacheKey) === false) {\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n      return Promise.resolve(cachedResp);\n    }\n\n    return this.xhr({\n      url,\n      type: method,\n      headers,\n      strictSSL: this.options.http.strictSSL\n    })\n      .then((response: IXhrResponse) => {\n        return this.createCachedResponse(\n          cacheKey,\n          response.status,\n          response.responseText,\n          false\n        );\n      })\n      .catch((response: IXhrResponse) => {\n        const result = this.createCachedResponse(\n          cacheKey,\n          response.status,\n          response.responseText,\n          true\n        );\n        return Promise.reject<HttpClientResponse>(result);\n      });\n  }\n\n}","import {\n  HttpRequestOptions,\n  IHttpClient,\n  IJsonHttpClient,\n  JsonHttpClient\n} from \"core.clients\";\nimport { ILogger } from \"core.logging\";\nimport { HttpClient } from \"./httpClient\";\n\nexport function createHttpClient(\n  options: HttpRequestOptions, logger: ILogger\n): IHttpClient {\n  return new HttpClient(require('request-light').xhr, options, logger);\n}\n\nexport function createJsonClient(\n  options: HttpRequestOptions, logger: ILogger\n): IJsonHttpClient {\n  return new JsonHttpClient(createHttpClient(options, logger));\n}","import {\n  AbstractCachedRequest,\n  ClientResponseSource,\n  ProcessClientResponse,\n  IProcessClient,\n  ICachingOptions\n} from 'core.clients';\nimport { ILogger } from 'core.logging';\n\nimport { IPromiseSpawnFn } from './definitions/iPromiseSpawn';\n\nexport class ProcessClient extends AbstractCachedRequest<string, string>\n  implements IProcessClient {\n\n  promiseSpawn: IPromiseSpawnFn;\n\n  logger: ILogger;\n\n  constructor(promiseSpawnFn: IPromiseSpawnFn, processOpts: ICachingOptions, processLogger: ILogger) {\n    super(processOpts);\n    this.logger = processLogger;\n    this.promiseSpawn = promiseSpawnFn;\n  }\n\n  async request(\n    cmd: string, args: Array<string>, cwd: string\n  ): Promise<ProcessClientResponse> {\n\n    const cacheKey = `${cmd} ${args.join(' ')}`;\n\n    if (this.cache.cachingOpts.duration > 0 &&\n      this.cache.hasExpired(cacheKey) === false) {\n      this.logger.debug('cached - %s', cacheKey);\n\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n      return Promise.resolve(cachedResp);\n    }\n\n    this.logger.debug('executing - %s', cacheKey);\n\n    return this.promiseSpawn(cmd, args, { cwd, stdioString: true })\n      .then(result => {\n        return this.createCachedResponse(\n          cacheKey,\n          result.code,\n          result.stdout,\n          false,\n          ClientResponseSource.local\n        );\n      }).catch(error => {\n        const result = this.createCachedResponse(\n          cacheKey,\n          error.code,\n          error.message,\n          true,\n          ClientResponseSource.local\n        );\n        return Promise.reject<ProcessClientResponse>(result);\n      });\n\n  }\n\n}","import { IProcessClient, ICachingOptions } from \"core.clients\";\nimport { ILogger } from \"core.logging\";\nimport { ProcessClient } from \"./processClient\";\n\nexport function createProcessClient(\n  cachingOpts: ICachingOptions, logger: ILogger\n): IProcessClient {\n\n  return new ProcessClient(require('@npmcli/promise-spawn'), cachingOpts, logger);\n}\n\n","export * from './src/definitions/iVsCodeConfig';\nexport * from './src/vscodeConfig';","import { IConfig, IFrozenOptions } from 'core.configuration';\n\nimport { IVsCodeWorkspace } from './definitions/iVsCodeConfig';\n\n// allows vscode configuration to be defrosted\n// Useful for accessing hot changing values from settings.json\n// Stays frozen until defrost() is called and then refrosts\nexport class VsCodeConfig implements IFrozenOptions {\n\n  protected frozen: IConfig;\n\n  section: string;\n\n  workspace: IVsCodeWorkspace;\n\n  constructor(workspace: IVsCodeWorkspace, section: string) {\n    this.workspace = workspace;\n    this.section = section;\n    this.frozen = null;\n  }\n\n  protected get repo(): IConfig {\n    return this.workspace.getConfiguration(this.section);\n  }\n\n  get<T>(key: string): T {\n    if (this.frozen === null) {\n      this.frozen = this.repo;\n    }\n\n    return this.frozen.get(key);\n  }\n\n  defrost() {\n    this.frozen = null;\n  }\n\n}","export * from './src/loggerFactory';\nexport * from './src/transports/iLoggerTransport';\nexport * from './src/transports/outputChannelTransport';","import { ILogger } from 'core.logging';\n\nimport { ILoggerTransport } from './transports/iLoggerTransport';\n\nconst { loggers, format, transports } = require('winston');\n\nexport function createWinstonLogger(\n  loggerTransport: ILoggerTransport, defaultMeta: object\n): ILogger {\n\n  const logTransports = [\n    // capture errors in the console\n    new transports.Console({ level: 'error' }),\n\n    // send info to the transport\n    loggerTransport\n  ];\n\n  const logFormat = format.combine(\n    format.timestamp({ format: loggerTransport.logging.timestampFormat }),\n    format.simple(),\n    format.splat(),\n    format.printf(loggerFormatter)\n  );\n\n  return loggers.add(\n    loggerTransport.name,\n    {\n      format: logFormat,\n      defaultMeta,\n      transports: logTransports,\n    }\n  );\n}\n\nfunction loggerFormatter(entry) {\n  return `[${entry.timestamp}] [${entry.namespace}] [${entry.level}] ${entry.message}`\n}","import { OutputChannel } from 'vscode';\n\nimport { ILoggingOptions } from 'core.logging';\n\nimport { ILoggerTransport } from './iLoggerTransport';\n\nconst { Transport } = require('winston');\n\nconst MESSAGE = Symbol.for('message');\n\nexport class OutputChannelTransport extends Transport implements ILoggerTransport {\n\n  constructor(outputChannel: OutputChannel, logging: ILoggingOptions) {\n    super({ level: logging.level });\n    this.outputChannel = outputChannel;\n    this.logging = logging;\n  }\n\n  outputChannel: OutputChannel;\n\n  logging: ILoggingOptions;\n\n  get name() {\n    return this.outputChannel.name;\n  }\n\n  log(entry, callback) {\n\n    setImmediate(() => {\n      this.emit('logged', entry)\n      this.outputChannel.appendLine(`${entry[MESSAGE]}`);\n    });\n\n    callback();\n  }\n\n  updateLevel() {\n    this.logging.defrost();\n    super.level = this.logging.level;\n  }\n\n}","var map = {\n\t\"./composer/index\": \"./src/infrastructure.providers/composer/index.ts\",\n\t\"./dotnet/index\": \"./src/infrastructure.providers/dotnet/index.ts\",\n\t\"./dub/index\": \"./src/infrastructure.providers/dub/index.ts\",\n\t\"./jspm/index\": \"./src/infrastructure.providers/jspm/index.ts\",\n\t\"./maven/index\": \"./src/infrastructure.providers/maven/index.ts\",\n\t\"./npm/index\": \"./src/infrastructure.providers/npm/index.ts\",\n\t\"./pub/index\": \"./src/infrastructure.providers/pub/index.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/infrastructure.providers sync recursive ^\\\\.\\\\/.*\\\\/index$\";","export * from './src/composerSuggestionProvider';\nexport * from './src/composerConfig';\nexport * from './src/composerClient';\nexport * from './src/composerContainer';","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  VersionHelpers,\n  TPackageRequest,\n  TPackageDocument,\n  PackageSourceTypes,\n  TSemverSpec,\n  IPackageClient\n} from 'core.packages';\nimport {\n  HttpClientRequestMethods,\n  HttpClientResponse,\n  JsonClientResponse,\n  IJsonHttpClient,\n} from 'core.clients';\n\nimport { ComposerConfig } from './composerConfig';\n\nexport class ComposerClient implements IPackageClient<null> {\n\n  config: ComposerConfig;\n\n  client: IJsonHttpClient;\n\n  logger: ILogger;\n\n  constructor(\n    config: ComposerConfig,\n    client: IJsonHttpClient,\n    logger: ILogger\n  ) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchPackage<TClientData>(\n    request: TPackageRequest<TClientData>\n  ): Promise<TPackageDocument> {\n    const semverSpec = VersionHelpers.parseSemver(request.package.version);\n    const url = `${this.config.apiUrl}${request.package.name}.json`;\n\n    return this.createRemotePackageDocument(url, request, semverSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n\n        return Promise.reject(error);\n      });\n  }\n\n  async createRemotePackageDocument<TClientData>(\n    url: string,\n    request: TPackageRequest<TClientData>,\n    semverSpec: TSemverSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {};\n    const headers = {};\n\n    return this.client.request(HttpClientRequestMethods.get, url, query, headers)\n      .then(function (httpResponse: JsonClientResponse): TPackageDocument {\n        const packageInfo = httpResponse.data.packages[request.package.name];\n\n        const { providerName } = request;\n\n        const versionRange = semverSpec.rawVersion;\n\n        const requested = request.package;\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        const rawVersions = Object.keys(packageInfo);\n\n        // extract semver versions only\n        const semverVersions = VersionHelpers.filterSemverVersions(rawVersions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          VersionHelpers.filterSemverVersions(semverVersions)\n        );\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source: PackageSourceTypes.Registry,\n          response,\n          type: semverSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n      });\n  }\n\n}\n\nexport function readComposerSelections(filePath) {\n\n  return new Promise(function (resolve, reject) {\n    const fs = require('fs');\n\n    if (fs.existsSync(filePath) === false) {\n      reject(null);\n      return;\n    }\n\n    fs.readFile(filePath, \"utf-8\", (err, data) => {\n      if (err) {\n        reject(err)\n        return;\n      }\n\n      const selectionsJson = JSON.parse(data.toString());\n\n      resolve(selectionsJson);\n    });\n\n  });\n\n}\n\n","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions, UrlHelpers } from 'core.clients';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { ComposerContributions } from './definitions/eComposerContributions';\n\nexport class ComposerConfig implements IProviderConfig {\n\n  constructor(config: IFrozenOptions, caching: ICachingOptions, http: IHttpOptions) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'composer';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n    ProviderSupport.InstalledStatuses,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'json',\n    scheme: 'file',\n    pattern: '**/composer.json',\n  };\n\n  http: IHttpOptions;\n\n  caching: ICachingOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(ComposerContributions.DependencyProperties);\n  }\n\n  get apiUrl(): string {\n    return UrlHelpers.ensureEndSlash(this.config.get(ComposerContributions.ApiUrl));\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient } from 'infrastructure.clients';\n\nimport { ComposerContributions } from './definitions/eComposerContributions';\nimport { IComposerContainerMap } from './definitions/iComposerContainerMap';\nimport { ComposerSuggestionProvider } from './composerSuggestionProvider'\nimport { ComposerConfig } from './composerConfig';\nimport { ComposerClient } from './composerClient';\n\nexport function configureContainer(\n  container: AwilixContainer<IComposerContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    composerCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        ComposerContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    composerHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        ComposerContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    composerConfig: asFunction(\n      (rootConfig, composerCachingOpts, composerHttpOpts) =>\n        new ComposerConfig(rootConfig, composerCachingOpts, composerHttpOpts)\n    ).singleton(),\n\n    // clients\n    composerJsonClient: asFunction(\n      (composerCachingOpts, composerHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: composerCachingOpts,\n            http: composerHttpOpts\n          },\n          logger.child({ namespace: 'composer request' })\n        )\n    ).singleton(),\n\n    composerClient: asFunction(\n      (composerConfig, composerJsonClient, logger) =>\n        new ComposerClient(\n          composerConfig,\n          composerJsonClient,\n          logger.child({ namespace: 'composer client' })\n        )\n    ).singleton(),\n\n    // provider\n    composerProvider: asFunction(\n      (composerClient, logger) =>\n        new ComposerSuggestionProvider(\n          composerClient,\n          logger.child({ namespace: 'composer provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap)\n\n  return container.cradle.composerProvider;\n}","import { ILogger } from 'core.logging';\nimport {\n  ISuggestionProvider,\n  defaultReplaceFn,\n  TSuggestionReplaceFunction\n} from 'core.suggestions';\nimport {\n  extractPackageDependenciesFromJson,\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { ComposerConfig } from './composerConfig';\nimport { ComposerClient } from './composerClient';\n\nexport class ComposerSuggestionProvider implements ISuggestionProvider {\n\n  client: ComposerClient;\n\n  config: ComposerConfig;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(client: ComposerClient, logger: ILogger) {\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = defaultReplaceFn\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromJson(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    const clientData = null;\n\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n\n}","export enum ComposerContributions {\n  Caching = 'composer.caching',\n  Http = 'composer.http',\n\n  DependencyProperties = 'composer.dependencyProperties',\n  ApiUrl = 'composer.apiUrl',\n}","export * from './src/clients/dotnetCli'\nexport * from './src/clients/nugetPackageClient'\nexport * from './src/clients/nugetResourceClient'\n\nexport * from './src/definitions/dotnet'\nexport * from './src/definitions/nuget'\nexport * from './src/definitions/iNugetOptions'\n\nexport * from './src/dotnetConfig'\nexport * from './src/dotnetSuggestionProvider'\nexport * from './src/dotnetUtils'\nexport * from './src/dotnetXmlParserFactory'\n\nexport * from './src/options/nugetOptions'\n\nexport * from './src/dotnetContainer'\n","import { ILogger } from 'core.logging';\nimport { UrlHelpers, IProcessClient } from 'core.clients';\nimport { DotNetSource } from '../definitions/dotnet';\nimport { DotNetConfig } from '../dotnetConfig';\n\nexport class DotNetCli {\n\n  config: DotNetConfig;\n\n  client: IProcessClient;\n\n  logger: ILogger;\n\n  constructor(config: DotNetConfig, client: IProcessClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchSources(cwd: string): Promise<Array<DotNetSource>> {\n\n    const promisedCli = this.client.request(\n      'dotnet',\n      ['nuget', 'list', 'source', '--format', 'short'],\n      cwd\n    );\n\n    return await promisedCli.then(result => {\n      const { data } = result;\n\n      // reject when data contains \"error\"\n      if (data.indexOf(\"error\") > -1) return Promise.reject(result);\n\n      // check we have some data\n      if (data.length === 0 || data.indexOf('E') === -1) {\n        return [];\n      }\n\n      // extract sources\n      const hasCrLf = data.indexOf(crLf) > 0;\n      const splitChar = hasCrLf ? crLf : '\\n';\n      let lines = data.split(splitChar);\n\n      // pop any blank entries\n      if (lines[lines.length - 1] === '') lines.pop();\n\n      return parseSourcesArray(lines).filter(s => s.enabled);\n    }).then(sources => {\n      // combine the sources where feed take precedent\n      const feedSources = convertFeedsToSources(this.config.nuget.sources);\n      return [\n        ...feedSources,\n        ...sources\n      ]\n    }).catch(error => {\n      // return the fallback source for dotnet clients < 5.5\n      return [\n        <DotNetSource>{\n          enabled: true,\n          machineWide: false,\n          protocol: UrlHelpers.RegistryProtocols.https,\n          url: this.config.fallbackNugetSource,\n        }\n      ]\n    })\n  }\n}\n\nconst crLf = '\\r\\n';\nfunction parseSourcesArray(lines: Array<string>): Array<DotNetSource> {\n  return lines.map(function (line) {\n    const enabled = line.substring(0, 1) === 'E';\n    const machineWide = line.substring(1, 2) === 'M';\n    const offset = machineWide ? 3 : 2;\n    const url = line.substring(offset);\n    const protocol = UrlHelpers.getProtocolFromUrl(url);\n    return {\n      enabled,\n      machineWide,\n      url,\n      protocol\n    };\n  });\n}\n\nfunction convertFeedsToSources(feeds: Array<string>): Array<DotNetSource> {\n  return feeds.map(function (url: string) {\n    const protocol = UrlHelpers.getProtocolFromUrl(url);\n    const machineWide = (protocol === UrlHelpers.RegistryProtocols.file);\n    return {\n      enabled: true,\n      machineWide,\n      url,\n      protocol\n    };\n  });\n}\n","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  TPackageDocument,\n  PackageSourceTypes,\n  PackageVersionTypes,\n  TPackageRequest,\n  VersionHelpers,\n  IPackageClient,\n  ResponseFactory,\n} from 'core.packages';\n\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  UrlHelpers,\n  IJsonHttpClient,\n} from 'core.clients';\n\nimport { NuGetClientData } from '../definitions/nuget';\nimport { DotNetVersionSpec } from '../definitions/dotnet';\nimport { parseVersionSpec } from '../dotnetUtils';\nimport { DotNetConfig } from '../dotnetConfig';\n\nexport class NuGetPackageClient implements IPackageClient<NuGetClientData> {\n\n  config: DotNetConfig;\n\n  client: IJsonHttpClient;\n\n  logger: ILogger;\n\n  constructor(config: DotNetConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<NuGetClientData>): Promise<TPackageDocument> {\n    const dotnetSpec = parseVersionSpec(request.package.version);\n    return this.fetchPackageRetry(request, dotnetSpec);\n  }\n\n  async fetchPackageRetry(\n    request: TPackageRequest<NuGetClientData>,\n    dotnetSpec: DotNetVersionSpec\n  ): Promise<TPackageDocument> {\n    const urls = request.clientData.serviceUrls;\n    const autoCompleteUrl = urls[request.attempt];\n\n    return this.createRemotePackageDocument(autoCompleteUrl, request, dotnetSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        // increase the attempt number\n        request.attempt++;\n\n        // only retry if 404 and we have more urls to try\n        if (error.status === 404 && request.attempt < urls.length) {\n          // retry\n          return this.fetchPackageRetry(request, dotnetSpec)\n        }\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n\n        // unexpected\n        return Promise.reject(error);\n      });\n\n  }\n\n  async createRemotePackageDocument(\n    url: string,\n    request: TPackageRequest<NuGetClientData>,\n    dotnetSpec: DotNetVersionSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {};\n    const headers = {};\n    const packageUrl = UrlHelpers.ensureEndSlash(url) + `${request.package.name.toLowerCase()}/index.json`;\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      packageUrl,\n      query,\n      headers\n    )\n      .then(function (httpResponse) {\n\n        const { data } = httpResponse;\n\n        const source = PackageSourceTypes.Registry;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const packageInfo = data;\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        // sanitize to semver only versions\n        const rawVersions = VersionHelpers.filterSemverVersions(packageInfo.versions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(rawVersions)\n\n        // four segment is not supported\n        if (dotnetSpec.spec && dotnetSpec.spec.hasFourSegments) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            httpResponse,\n            [],\n          )\n        }\n\n        // no match if null type\n        if (dotnetSpec.type === null) {\n          return DocumentFactory.createNoMatch(\n            providerName,\n            source,\n            PackageVersionTypes.Version,\n            requested,\n            ResponseFactory.createResponseStatus(httpResponse.source, 404),\n            // suggest the latest release if available\n            releases.length > 0 ? releases[releases.length - 1] : null,\n          )\n        }\n\n        const versionRange = dotnetSpec.resolvedVersion;\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type: dotnetSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n      });\n  }\n\n}","import { ILogger } from 'core.logging';\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  IJsonHttpClient\n} from 'core.clients';\n\nimport { NugetServiceIndexResponse } from '../definitions/nuget';\nimport { DotNetSource } from '../definitions/dotnet';\n\nexport class NuGetResourceClient {\n\n  logger: any;\n\n  client: IJsonHttpClient;\n\n  constructor(client: IJsonHttpClient, logger: ILogger) {\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchResource(source: DotNetSource): Promise<string> {\n    const query = {};\n    const headers = {};\n\n    this.logger.debug(\"Requesting PackageBaseAddressService from %s\", source.url)\n\n    return await this.client.request(\n      HttpClientRequestMethods.get,\n      source.url,\n      query,\n      headers\n    )\n      .then((response: NugetServiceIndexResponse) => {\n        const packageBaseAddressServices = response.data.resources\n          .filter(res => res[\"@type\"].indexOf('PackageBaseAddress') > -1);\n\n        // just take one service for now\n        const foundPackageBaseAddressServices = packageBaseAddressServices[0][\"@id\"];\n\n        this.logger.debug(\n          \"Resolved PackageBaseAddressService endpoint: %O\",\n          foundPackageBaseAddressServices\n        );\n\n        return foundPackageBaseAddressServices;\n      })\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.error(\n          \"Could not resolve nuget service index. %O\",\n          error\n        )\n\n        return \"\";\n      });\n\n  }\n\n}","export enum DotNetContributions {\n  Caching = 'dotnet.caching',\n  Http = 'dotnet.http',\n  Nuget = 'dotnet.nuget',\n  DependencyProperties = 'dotnet.dependencyProperties',\n  TagFilter = 'dotnet.tagFilter',\n}","export enum NugetContributions {\n  Sources = 'sources',\n}","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions } from 'core.clients';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { INugetOptions } from \"./definitions/iNugetOptions\";\nimport { DotNetContributions } from './definitions/eDotNetContributions';\n\nexport class DotNetConfig implements IProviderConfig {\n\n  constructor(\n    config: IFrozenOptions,\n    dotnetCachingOpts: ICachingOptions,\n    dotnetHttpOpts: IHttpOptions,\n    nugetOpts: INugetOptions,\n  ) {\n    this.config = config;\n    this.caching = dotnetCachingOpts;\n    this.http = dotnetHttpOpts;\n    this.nuget = nugetOpts;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'dotnet';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'xml',\n    scheme: 'file',\n    pattern: '**/*.{csproj,fsproj,targets,props}',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  nuget: INugetOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(DotNetContributions.DependencyProperties);\n  }\n\n  get tagFilter(): Array<string> {\n    return this.config.get(DotNetContributions.TagFilter);\n  }\n\n  get fallbackNugetSource(): string {\n    return 'https://api.nuget.org/v3/index.json';\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient, createProcessClient } from 'infrastructure.clients';\n\nimport { IDotNetContainerMap } from './definitions/iDotNetContainerMap';\nimport { DotNetContributions } from './definitions/eDotNetContributions';\nimport { NugetOptions } from './options/nugetOptions';\nimport { DotNetCli } from './clients/dotnetCli';\nimport { NuGetResourceClient } from './clients/nugetResourceClient';\nimport { NuGetPackageClient } from './clients/nugetPackageClient';\nimport { DotNetSuggestionProvider } from './dotnetSuggestionProvider';\nimport { DotNetConfig } from './dotnetConfig';\n\nexport function configureContainer(\n  container: AwilixContainer<IDotNetContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    nugetOpts: asFunction(\n      rootConfig => new NugetOptions(\n        rootConfig,\n        DotNetContributions.Nuget\n      )\n    ).singleton(),\n\n    dotnetCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        DotNetContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    dotnetHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        DotNetContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    dotnetConfig: asFunction(\n      (rootConfig, dotnetCachingOpts, dotnetHttpOpts, nugetOpts) =>\n        new DotNetConfig(\n          rootConfig,\n          dotnetCachingOpts,\n          dotnetHttpOpts,\n          nugetOpts\n        )\n    ).singleton(),\n\n    // cli\n    dotnetProcess: asFunction(\n      (dotnetCachingOpts, logger) =>\n        createProcessClient(\n          dotnetCachingOpts,\n          logger.child({ namespace: 'dotnet process' })\n        )\n    ).singleton(),\n\n    dotnetCli: asFunction(\n      (dotnetConfig, dotnetProcess, logger) =>\n        new DotNetCli(\n          dotnetConfig,\n          dotnetProcess,\n          logger.child({ namespace: 'dotnet cli' })\n        )\n    ).singleton(),\n\n    // clients\n    dotnetJsonClient: asFunction(\n      (dotnetCachingOpts, dotnetHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: dotnetCachingOpts,\n            http: dotnetHttpOpts\n          },\n          logger.child({ namespace: 'dotnet request' })\n        )\n    ).singleton(),\n\n    nugetClient: asFunction(\n      (dotnetConfig, dotnetJsonClient, logger) =>\n        new NuGetPackageClient(\n          dotnetConfig,\n          dotnetJsonClient,\n          logger.child({ namespace: 'dotnet client' })\n        )\n    ).singleton(),\n\n    nugetResClient: asFunction(\n      (dotnetJsonClient, logger) =>\n        new NuGetResourceClient(\n          dotnetJsonClient,\n          logger.child({ namespace: 'dotnet resource service' })\n        )\n    ).singleton(),\n\n    // provider\n    dotnetProvider: asFunction(\n      (dotnetCli, nugetClient, nugetResClient, logger) =>\n        new DotNetSuggestionProvider(\n          dotnetCli,\n          nugetClient,\n          nugetResClient,\n          logger.child({ namespace: 'dotnet provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.dotnetProvider;\n}","import { ILogger } from 'core.logging';\nimport { UrlHelpers } from 'core.clients';\nimport {\n  ISuggestionProvider,\n  defaultReplaceFn,\n  TSuggestionReplaceFunction\n} from 'core.suggestions';\nimport {\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { DotNetCli } from './clients/dotnetCli';\nimport { NuGetPackageClient } from './clients/nugetPackageClient';\nimport { NuGetResourceClient } from './clients/nugetResourceClient';\nimport { NuGetClientData } from './definitions/nuget';\nimport { DotNetConfig } from './dotnetConfig';\nimport { createDependenciesFromXml } from './dotnetXmlParserFactory'\n\nexport class DotNetSuggestionProvider implements ISuggestionProvider {\n\n  dotnetClient: DotNetCli;\n\n  nugetPackageClient: NuGetPackageClient;\n\n  nugetResClient: NuGetResourceClient;\n\n  config: DotNetConfig;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(\n    dotnetCli: DotNetCli,\n    nugetClient: NuGetPackageClient,\n    nugetResClient: NuGetResourceClient,\n    logger: ILogger\n  ) {\n    this.dotnetClient = dotnetCli;\n    this.nugetPackageClient = nugetClient;\n    this.nugetResClient = nugetResClient;\n    this.config = nugetClient.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = defaultReplaceFn\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = createDependenciesFromXml(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    // ensure latest nuget sources from settings\n    this.config.nuget.defrost();\n\n    // get each service index source from the dotnet cli\n    const sources = await this.dotnetClient.fetchSources(packagePath)\n\n    // remote sources only\n    const remoteSources = sources.filter(\n      s => s.protocol === UrlHelpers.RegistryProtocols.https ||\n        s.protocol === UrlHelpers.RegistryProtocols.http\n    );\n\n    // resolve each service url\n    const promised = remoteSources.map(\n      async (remoteSource) => {\n        return await this.nugetResClient.fetchResource(remoteSource);\n      }\n    );\n\n    const serviceUrls = (await Promise.all(promised))\n      .filter(url => url.length > 0);\n\n    if (serviceUrls.length === 0) {\n      this.logger.error(\"Could not resolve any nuget service urls\")\n      return null;\n    }\n\n    const clientData: NuGetClientData = { serviceUrls: serviceUrls }\n\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.nugetPackageClient,\n      clientData,\n      packageDependencies,\n    );\n\n  }\n\n}","import { PackageVersionTypes, VersionHelpers } from 'core.packages';\n\nimport { DotNetVersionSpec } from './definitions/dotnet';\nimport { NugetVersionSpec } from './definitions/nuget';\n\nexport function expandShortVersion(value) {\n  if (!value ||\n    value.indexOf('[') !== -1 ||\n    value.indexOf('(') !== -1 ||\n    value.indexOf(',') !== -1 ||\n    value.indexOf(')') !== -1 ||\n    value.indexOf(']') !== -1 ||\n    value.indexOf('*') !== -1)\n    return value;\n\n  let dotCount = 0;\n  for (let i = 0; i < value.length; i++) {\n    const c = value[i];\n    if (c === '.')\n      dotCount++;\n    else if (isNaN(parseInt(c)))\n      return value;\n  }\n\n  let fmtValue = '';\n  if (dotCount === 0)\n    fmtValue = value + '.0.0';\n  else if (dotCount === 1)\n    fmtValue = value + '.0';\n  else\n    return value;\n\n  return fmtValue;\n}\n\nexport function parseVersionSpec(rawVersion: string): DotNetVersionSpec {\n  const spec = buildVersionSpec(rawVersion);\n\n  let version: string;\n  let isValidVersion = false;\n  let isValidRange = false;\n\n  if (spec && !spec.hasFourSegments) {\n    // convert spec to semver\n    const { valid, validRange } = require('semver');\n    version = convertVersionSpecToString(spec);\n    isValidVersion = valid(version, VersionHelpers.loosePrereleases);\n    isValidRange = !isValidVersion && validRange(version, VersionHelpers.loosePrereleases) !== null;\n  }\n\n  const type: PackageVersionTypes = isValidVersion ?\n    PackageVersionTypes.Version :\n    isValidRange ? PackageVersionTypes.Range : null\n\n  const resolvedVersion = spec ? version : '';\n\n  return {\n    type,\n    rawVersion,\n    resolvedVersion,\n    spec\n  };\n}\n\nexport function buildVersionSpec(value): NugetVersionSpec {\n  let formattedValue = expandShortVersion(value.trim());\n  if (!formattedValue) return null;\n\n  // test if the version is in semver format\n  const semver = require('semver');\n  const parsedSemver = semver.parse(formattedValue, { includePrereleases: true });\n  if (parsedSemver) {\n    return {\n      version: formattedValue,\n      isMinInclusive: true,\n      isMaxInclusive: true,\n      hasFourSegments: false,\n    };\n  }\n\n  try {\n    // test if the version is a semver range format\n    const parsedNodeRange = semver.validRange(formattedValue, { includePrereleases: true });\n    if (parsedNodeRange) {\n      return {\n        version: parsedNodeRange,\n        isMinInclusive: true,\n        isMaxInclusive: true,\n        hasFourSegments: false,\n      };\n    }\n  } catch { }\n\n  // fail if the string is too short\n  if (formattedValue.length < 3) return null;\n\n  const versionSpec: NugetVersionSpec = {};\n\n  // first character must be [ or (\n  const first = formattedValue[0];\n  if (first === '[')\n    versionSpec.isMinInclusive = true;\n  else if (first === '(')\n    versionSpec.isMinInclusive = false;\n  else if (VersionHelpers.isFourSegmentedVersion(formattedValue))\n    return { hasFourSegments: true }\n  else\n    return null;\n\n  // last character must be ] or )\n  const last = formattedValue[formattedValue.length - 1];\n  if (last === ']')\n    versionSpec.isMaxInclusive = true;\n  else if (last === ')')\n    versionSpec.isMaxInclusive = false;\n\n  // remove any [] or ()\n  formattedValue = formattedValue.substr(1, formattedValue.length - 2);\n\n  // split by comma\n  const parts = formattedValue.split(',');\n\n  // more than 2 is invalid\n  if (parts.length > 2)\n    return null;\n  else if (parts.every(x => !x))\n    // must be (,]\n    return null;\n\n  // if only one entry then use it for both min and max\n  const minVersion = parts[0];\n  const maxVersion = (parts.length == 2) ? parts[1] : parts[0];\n\n  // parse the min version\n  if (minVersion) {\n    const parsedVersion = buildVersionSpec(minVersion);\n    if (!parsedVersion) return null;\n\n    versionSpec.minVersionSpec = parsedVersion;\n    versionSpec.hasFourSegments = parsedVersion.hasFourSegments;\n  }\n\n  // parse the max version\n  if (maxVersion) {\n    const parsedVersion = buildVersionSpec(maxVersion);\n    if (!parsedVersion) return null;\n\n    versionSpec.maxVersionSpec = parsedVersion;\n    versionSpec.hasFourSegments = parsedVersion.hasFourSegments;\n  }\n\n  return versionSpec;\n}\n\nfunction convertVersionSpecToString(versionSpec: NugetVersionSpec) {\n  // x.x.x cases\n  if (versionSpec.version\n    && versionSpec.isMinInclusive\n    && versionSpec.isMaxInclusive)\n    return versionSpec.version;\n\n  // [x.x.x] cases\n  if (versionSpec.minVersionSpec\n    && versionSpec.maxVersionSpec\n    && versionSpec.minVersionSpec.version === versionSpec.maxVersionSpec.version\n    && versionSpec.isMinInclusive\n    && versionSpec.isMaxInclusive)\n    return versionSpec.minVersionSpec.version;\n\n  let rangeBuilder = '';\n\n  if (versionSpec.minVersionSpec) {\n    rangeBuilder += '>';\n    if (versionSpec.isMinInclusive)\n      rangeBuilder += '=';\n    rangeBuilder += versionSpec.minVersionSpec.version\n  }\n\n  if (versionSpec.maxVersionSpec) {\n    rangeBuilder += rangeBuilder.length > 0 ? ' ' : '';\n    rangeBuilder += '<';\n    if (versionSpec.isMaxInclusive)\n      rangeBuilder += '=';\n    rangeBuilder += versionSpec.maxVersionSpec.version\n  }\n\n  return rangeBuilder;\n}","import { Nullable } from 'core.generics';\nimport { IPackageDependency, TPackageDependencyRange } from 'core.packages';\n\nexport function createDependenciesFromXml(\n  xml: string, includePropertyNames: Array<string>\n): Array<IPackageDependency> {\n\n  const xmldoc = require('xmldoc');\n  let document = null\n\n  try {\n    document = new xmldoc.XmlDocument(xml);\n  } catch {\n    document = null;\n  }\n\n  if (!document) return [];\n  return extractPackageLensDataFromNodes(document, xml, includePropertyNames);\n}\n\nfunction extractPackageLensDataFromNodes(\n  topLevelNodes, xml: string, includePropertyNames: Array<string>\n) {\n  const collector = [];\n\n  topLevelNodes.eachChild(\n    function (node) {\n      if (node.name !== \"ItemGroup\") return;\n      node.eachChild(\n        function (itemGroupNode) {\n          if (includePropertyNames.includes(itemGroupNode.name) == false) return;\n          const dependencyLens = createFromAttribute(itemGroupNode, xml);\n          if (dependencyLens) collector.push(dependencyLens);\n        }\n      )\n    }\n  )\n\n  return collector\n}\n\nfunction createFromAttribute(node, xml: string): IPackageDependency {\n  const nameRange = {\n    start: node.startTagPosition,\n    end: node.startTagPosition,\n  };\n\n  // xmldoc doesn't report attribute ranges so this gets them manually\n  const versionRange = getAttributeRange(node, ' version=\"', xml);\n  if (versionRange === null) return null;\n\n  const packageInfo = {\n    name: node.attr.Include || node.attr.Update,\n    version: node.attr.Version,\n  }\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo,\n  }\n}\n\nfunction getAttributeRange(\n  node, attributeName: string, xml: string\n): Nullable<TPackageDependencyRange> {\n  const lineText = xml.substring(node.startTagPosition, node.position);\n\n  let start = lineText.toLowerCase().indexOf(attributeName);\n  if (start === -1) return null;\n  start += attributeName.length\n\n  const end = lineText.indexOf('\"', start);\n\n  return {\n    start: node.startTagPosition + start,\n    end: node.startTagPosition + end,\n  };\n}","import { IFrozenOptions, Options } from 'core.configuration';\nimport { NugetContributions } from '../definitions/eNugetContributions';\nimport { INugetOptions } from '../definitions/iNugetOptions';\n\nexport class NugetOptions extends Options implements INugetOptions {\n\n  constructor(config: IFrozenOptions, section: string) {\n    super(config, section);\n  }\n\n  get sources(): Array<string> {\n    return this.get<Array<string>>(NugetContributions.Sources);\n  }\n\n}","export * from './src/dubClient'\nexport * from './src/dubConfig'\nexport * from './src/dubSuggestionProvider'\nexport * from './src/dubContainer'","export enum DubContributions {\n  Caching = 'dub.caching',\n  Http = 'dub.http',\n\n  DependencyProperties = 'dub.dependencyProperties',\n  ApiUrl = 'dub.apiUrl',\n}","import { ILogger } from 'core.logging';\nimport {\n  SuggestionFactory,\n  TPackageSuggestion,\n  SuggestionStatus\n} from 'core.suggestions';\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  IJsonHttpClient\n} from 'core.clients';\nimport {\n  DocumentFactory,\n  VersionHelpers,\n  PackageSourceTypes,\n  TPackageDocument,\n  TSemverSpec,\n  TPackageRequest,\n  IPackageClient,\n} from 'core.packages';\n\nimport { DubConfig } from './dubConfig';\n\nexport class DubClient implements IPackageClient<null> {\n\n  config: DubConfig;\n\n  client: IJsonHttpClient;\n\n  logger: ILogger;\n\n  constructor(config: DubConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<null>): Promise<TPackageDocument> {\n    const semverSpec = VersionHelpers.parseSemver(request.package.version);\n    const url = `${this.config.apiUrl}${encodeURIComponent(request.package.name)}/info`;\n\n    return this.createRemotePackageDocument(url, request, semverSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  async createRemotePackageDocument(\n    url: string,\n    request: TPackageRequest<null>,\n    semverSpec: TSemverSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {\n      minimize: 'true',\n    }\n\n    const headers = {};\n\n    return this.client.request(HttpClientRequestMethods.get, url, query, headers)\n      .then(function (httpResponse): TPackageDocument {\n\n        const packageInfo = httpResponse.data;\n\n        const { providerName } = request;\n\n        const versionRange = semverSpec.rawVersion;\n\n        const requested = request.package;\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        const rawVersions = VersionHelpers.extractVersionsFromMap(packageInfo.versions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(rawVersions)\n\n        // analyse suggestions\n        const suggestions = createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source: PackageSourceTypes.Registry,\n          response,\n          type: semverSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n      });\n  }\n\n}\n\nexport function createSuggestions(\n  versionRange: string,\n  releases: string[],\n  prereleases: string[]\n): Array<TPackageSuggestion> {\n\n  const suggestions = SuggestionFactory.createSuggestions(\n    versionRange,\n    releases,\n    prereleases\n  );\n\n  // check for ~{name} suggestion if no matches found\n  const firstSuggestion = suggestions[0];\n  const hasNoMatch = firstSuggestion.name === SuggestionStatus.NoMatch;\n  const isTildeVersion = versionRange.charAt(0) === '~';\n\n  if (hasNoMatch && isTildeVersion && releases.length > 0) {\n    const latestRelease = releases[releases.length - 1];\n\n    if (latestRelease === versionRange) {\n      suggestions[0] = SuggestionFactory.createMatchesLatest(versionRange);\n      suggestions.pop();\n    } else {\n      // suggest\n      suggestions[1] = SuggestionFactory.createLatest(latestRelease);\n    }\n\n  }\n\n  return suggestions;\n}\n\nexport async function readDubSelections(filePath) {\n\n  return new Promise(function (resolve, reject) {\n    const fs = require('fs');\n\n    if (fs.existsSync(filePath) === false) {\n      reject(null);\n      return;\n    }\n\n    fs.readFile(filePath, \"utf-8\", (err, data) => {\n      if (err) {\n        reject(err)\n        return;\n      }\n\n      const selectionsJson = JSON.parse(data.toString());\n      if (selectionsJson.fileVersion != 1) {\n        reject(new Error(`Unknown dub.selections.json file version ${selectionsJson.fileVersion}`))\n        return;\n      }\n\n      resolve(selectionsJson);\n    });\n\n  });\n\n}","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions, UrlHelpers } from 'core.clients';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { DubContributions } from './definitions/eDubContributions';\n\nexport class DubConfig implements IProviderConfig {\n\n  constructor(config: IFrozenOptions, caching: ICachingOptions, http: IHttpOptions) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'dub';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n    ProviderSupport.InstalledStatuses,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'json',\n    scheme: 'file',\n    pattern: '**/{dub.json,dub.selections.json}',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(DubContributions.DependencyProperties);\n  }\n\n  get apiUrl(): string {\n    return UrlHelpers.ensureEndSlash(this.config.get(DubContributions.ApiUrl));\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient } from 'infrastructure.clients';\n\nimport { DubContributions } from './definitions/eDubContributions';\nimport { IDubContainerMap } from './definitions/iDubContainerMap';\nimport { DubSuggestionProvider } from './dubSuggestionProvider'\nimport { DubConfig } from './dubConfig';\nimport { DubClient } from './dubClient';\n\nexport function configureContainer(\n  container: AwilixContainer<IDubContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    dubCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        DubContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    dubHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        DubContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    dubConfig: asFunction(\n      (rootConfig, dubCachingOpts, dubHttpOpts) =>\n        new DubConfig(rootConfig, dubCachingOpts, dubHttpOpts)\n    ).singleton(),\n\n    // clients\n    dubJsonClient: asFunction(\n      (dubCachingOpts, dubHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: dubCachingOpts,\n            http: dubHttpOpts\n          },\n          logger.child({ namespace: 'dub request' })\n        )\n    ).singleton(),\n\n    dubClient: asFunction(\n      (dubConfig, dubJsonClient, logger) =>\n        new DubClient(\n          dubConfig,\n          dubJsonClient,\n          logger.child({ namespace: 'dub client' })\n        )\n    ).singleton(),\n\n    // provider\n    dubProvider: asFunction(\n      (dubClient, logger) =>\n        new DubSuggestionProvider(\n          dubClient,\n          logger.child({ namespace: 'dub provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap)\n\n  return container.cradle.dubProvider;\n}","import { ILogger } from 'core.logging';\nimport {\n  ISuggestionProvider,\n  defaultReplaceFn,\n  TSuggestionReplaceFunction\n} from 'core.suggestions';\nimport {\n  extractPackageDependenciesFromJson,\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { DubConfig } from './dubConfig';\nimport { DubClient } from './dubClient';\n\nexport class DubSuggestionProvider implements ISuggestionProvider {\n\n  config: DubConfig;\n\n  client: DubClient;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(client: DubClient, logger: ILogger) {\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = defaultReplaceFn\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromJson(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n    const clientData = null;\n\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n\n}","export * from './src/jspmConfig'\nexport * from './src/jspmPackageParser'\nexport * from './src/jspmSuggestionProvider'\nexport * from './src/jspmContainer'","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions } from 'core.clients';\n\nimport { NpmConfig, GitHubOptions } from 'infrastructure.providers.npm';\n\nexport class JspmConfig extends NpmConfig {\n\n  constructor(\n    config: IFrozenOptions,\n    caching: ICachingOptions,\n    http: IHttpOptions,\n    github: GitHubOptions\n  ) {\n    super(config, caching, http, github);\n  }\n\n  providerName: string = 'jspm';\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { ISuggestionProvider } from 'core.suggestions';\nimport { CachingOptions, HttpOptions } from 'core.clients';\n\nimport { createJsonClient } from 'infrastructure.clients';\nimport {\n  NpmContributions,\n  PacoteClient,\n  NpmPackageClient,\n  GitHubClient,\n  GitHubOptions\n} from 'infrastructure.providers.npm';\n\nimport { IJspmContainerMap } from './definitions/iJspmContainerMap';\nimport { JspmConfig } from './jspmConfig';\nimport { JspmSuggestionProvider } from './jspmSuggestionProvider'\n\nexport function configureContainer(\n  container: AwilixContainer<IJspmContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    jspmCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        NpmContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    jspmHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        NpmContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    jspmGitHubOpts: asFunction(\n      rootConfig => new GitHubOptions(\n        rootConfig,\n        NpmContributions.Github,\n        'github'\n      )\n    ).singleton(),\n\n    // config\n    jspmConfig: asFunction(\n      (rootConfig, jspmCachingOpts, jspmHttpOpts, jspmGitHubOpts) =>\n        new JspmConfig(rootConfig, jspmCachingOpts, jspmHttpOpts, jspmGitHubOpts)\n    ).singleton(),\n\n    // clients\n    githubJsonClient: asFunction(\n      (jspmCachingOpts, jspmHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: jspmCachingOpts,\n            http: jspmHttpOpts\n          },\n          logger.child({ namespace: 'jspm request' })\n        )\n    ).singleton(),\n\n    githubClient: asFunction(\n      (jspmConfig, githubJsonClient, logger) =>\n        new GitHubClient(\n          jspmConfig,\n          githubJsonClient,\n          logger.child({ namespace: 'jspm github' })\n        )\n    ).singleton(),\n\n    pacoteClient: asFunction(\n      (jspmConfig, logger) =>\n        new PacoteClient(\n          jspmConfig,\n          logger.child({ namespace: 'pacote client' })\n        )\n    ).singleton(),\n\n    jspmClient: asFunction(\n      (jspmConfig, githubClient, pacoteClient, logger) =>\n        new NpmPackageClient(\n          jspmConfig,\n          pacoteClient,\n          githubClient,\n          logger.child({ namespace: 'jspm client' })\n        )\n    ).singleton(),\n\n    // provider\n    jspmProvider: asFunction(\n      (jspmClient, logger) =>\n        new JspmSuggestionProvider(\n          jspmClient,\n          logger.child({ namespace: 'jspm provider' })\n        )\n    ).singleton(),\n\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.jspmProvider;\n}","import { IPackageDependency, extractFromNodes } from 'core.packages'\n\nexport function extractPackageDependenciesFromJson(\n  json: string,\n  filterPropertyNames: Array<string>\n): Array<IPackageDependency> {\n  const jsonParser = require(\"jsonc-parser\");\n\n  const jsonErrors = [];\n  const jsonTree = jsonParser.parseTree(json, jsonErrors);\n  if (!jsonTree || jsonTree.children.length === 0 || jsonErrors.length > 0) return [];\n\n  const children = jsonTree.children;\n  for (let i = 0; i < children.length; i++) {\n    const node = children[i];\n    const [keyEntry, valueEntry] = node.children;\n    if (keyEntry.value === 'jspm') {\n      return extractFromNodes(valueEntry.children, filterPropertyNames);\n    }\n  }\n\n  return [];\n}","import { ILogger } from 'core.logging';\nimport {\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport {\n  NpmSuggestionProvider,\n  NpmPackageClient\n} from 'infrastructure.providers.npm';\n\nimport { extractPackageDependenciesFromJson } from './jspmPackageParser';\n\nexport class JspmSuggestionProvider extends NpmSuggestionProvider {\n\n  constructor(client: NpmPackageClient, logger: ILogger) {\n    super(client, logger);\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromJson(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    const clientData = null;\n\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n}","export * from './src/clients/mavenClient'\nexport * from './src/clients/mvnCli'\nexport * from './src/definitions/mavenClientData'\nexport * from './src/definitions/mavenProjectProperty'\nexport * from './src/definitions/mavenRepository'\nexport * from './src/mavenConfig'\nexport * from './src/mavenSuggestionProvider'\nexport * from './src/mavenXmlParserFactory'\nexport * from './src/mavenContainer'","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  TPackageDocument,\n  PackageSourceTypes,\n  TPackageRequest,\n  VersionHelpers,\n  IPackageClient,\n  TSemverSpec,\n} from 'core.packages';\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  IHttpClient\n} from 'core.clients';\n\nimport { MavenClientData } from '../definitions/mavenClientData';\nimport { MavenConfig } from '../mavenConfig';\n\nexport class MavenClient implements IPackageClient<MavenClientData> {\n\n  config: MavenConfig;\n\n  httpClient: IHttpClient;\n\n  logger: ILogger;\n\n  constructor(config: MavenConfig, httpClient: IHttpClient, logger: ILogger) {\n    this.config = config;\n    this.httpClient = httpClient;\n    this.logger = logger;\n  }\n  async fetchPackage(request: TPackageRequest<MavenClientData>): Promise<TPackageDocument> {\n    const semverSpec = VersionHelpers.parseSemver(request.package.version);\n\n    const { repositories } = request.clientData;\n    const url = repositories[0].url\n    let [group, artifact] = request.package.name.split(':');\n    let search = group.replace(/\\./g, \"/\") + \"/\" + artifact\n    const queryUrl = `${url}${search}/maven-metadata.xml`;\n\n    return this.createRemotePackageDocument(queryUrl, request, semverSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  async createRemotePackageDocument(\n    url: string,\n    request: TPackageRequest<MavenClientData>,\n    semverSpec: TSemverSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {};\n    const headers = {};\n\n    return this.httpClient.request(\n      HttpClientRequestMethods.get,\n      url,\n      query,\n      headers\n    )\n      .then(function (httpResponse): TPackageDocument {\n\n        const { data } = httpResponse;\n\n        const source = PackageSourceTypes.Registry;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const versionRange = semverSpec.rawVersion;\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        // extract versions form xml\n        const rawVersions = getVersionsFromPackageXml(data);\n\n        // extract semver versions only\n        const semverVersions = VersionHelpers.filterSemverVersions(rawVersions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          semverVersions\n        );\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type: semverSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n      });\n  }\n\n}\n\nfunction getVersionsFromPackageXml(packageXml: string): Array<string> {\n  const xmldoc = require('xmldoc');\n  let xmlRootNode = new xmldoc.XmlDocument(packageXml);\n  let xmlVersioningNode = xmlRootNode.childNamed(\"versioning\");\n  let xmlVersionsList = xmlVersioningNode.childNamed(\"versions\").childrenNamed(\"version\");\n  let versions = [];\n\n  xmlVersionsList.forEach(xmlVersionNode => {\n    versions.push(xmlVersionNode.val);\n  })\n\n  return versions\n}","import { ILogger } from 'core.logging';\nimport { UrlHelpers, IProcessClient } from 'core.clients';\n\nimport { MavenConfig } from '../mavenConfig';\nimport { MavenRepository } from '../definitions/mavenRepository';\nimport * as MavenXmlFactory from '../mavenXmlParserFactory';\n\nexport class MvnCli {\n\n  config: MavenConfig;\n\n  client: IProcessClient;\n\n  logger: ILogger;\n\n  constructor(config: MavenConfig, client: IProcessClient, logger: ILogger) {\n    this.client = client;\n    this.config = config;\n    this.logger = logger;\n  }\n\n  async fetchRepositories(cwd: string): Promise<Array<MavenRepository>> {\n    const promisedCli = this.client.request(\n      'mvn ',\n      ['help:effective-settings'],\n      cwd\n    );\n\n    return promisedCli.then(result => {\n      const { data } = result;\n      // check we have some data\n      if (data.length === 0) return [];\n\n      return MavenXmlFactory.extractReposUrlsFromXml(data);\n    }).catch(error => {\n      return [];\n    }).then((repos: Array<string>) => {\n\n      if (repos.length === 0) {\n        // this.config.getDefaultRepository()\n        repos.push(\"https://repo.maven.apache.org/maven2/\")\n      }\n\n      return repos;\n\n    }).then((repos: Array<string>) => {\n\n      // parse urls to Array<MavenRepository.\n      return repos.map(url => {\n        const protocol = UrlHelpers.getProtocolFromUrl(url);\n        return {\n          url,\n          protocol,\n        }\n      });\n\n    });\n\n  }\n\n}\n","export enum MavenContributions {\n  Caching = 'maven.caching',\n  Http = 'maven.http',\n\n  DependencyProperties = 'maven.dependencyProperties',\n  TagFilter = 'maven.tagFilter',\n  ApiUrl = 'maven.apiUrl',\n}\n","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions, UrlHelpers } from 'core.clients';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { MavenContributions } from './definitions/eMavenContributions';\n\nexport class MavenConfig implements IProviderConfig {\n\n  constructor(config: IFrozenOptions, caching: ICachingOptions, http: IHttpOptions) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'maven';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'xml',\n    scheme: 'file',\n    pattern: '**/pom.xml',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(MavenContributions.DependencyProperties);\n  }\n\n  get tagFilter(): Array<string> {\n    return this.config.get(MavenContributions.DependencyProperties);\n  }\n\n  get apiUrl(): string {\n    return UrlHelpers.ensureEndSlash(this.config.get(MavenContributions.ApiUrl));\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createHttpClient, createProcessClient } from 'infrastructure.clients';\n\nimport { MavenContributions } from './definitions/eMavenContributions';\nimport { IMavenContainerMap } from './definitions/iMavenContainerMap';\nimport { MvnCli } from './clients/mvnCli';\nimport { MavenClient } from './clients/mavenClient';\nimport { MavenConfig } from './mavenConfig';\nimport { MavenSuggestionProvider } from './mavenSuggestionProvider'\n\nexport function configureContainer(\n  container: AwilixContainer<IMavenContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    mavenCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        MavenContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    mavenHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        MavenContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    mavenConfig: asFunction(\n      (rootConfig, mavenCachingOpts, mavenHttpOpts) =>\n        new MavenConfig(\n          rootConfig,\n          mavenCachingOpts,\n          mavenHttpOpts\n        )\n    ).singleton(),\n\n    // cli\n    mvnProcess: asFunction(\n      (mavenCachingOpts, logger) =>\n        createProcessClient(\n          mavenCachingOpts,\n          logger.child({ namespace: 'maven mvn process' })\n        )\n    ).singleton(),\n\n    mvnCli: asFunction(\n      (mavenConfig, mvnProcess, logger) =>\n        new MvnCli(\n          mavenConfig,\n          mvnProcess,\n          logger.child({ namespace: 'maven mvn cli' })\n        )\n    ).singleton(),\n\n    // clients\n    mavenHttpClient: asFunction(\n      (mavenCachingOpts, mavenHttpOpts, logger) =>\n        createHttpClient(\n          {\n            caching: mavenCachingOpts,\n            http: mavenHttpOpts\n          },\n          logger.child({ namespace: 'maven request' })\n        )\n    ).singleton(),\n\n    mavenClient: asFunction(\n      (mavenConfig, mavenHttpClient, logger) =>\n        new MavenClient(\n          mavenConfig,\n          mavenHttpClient,\n          logger.child({ namespace: 'maven client' })\n        )\n    ).singleton(),\n\n    // provider\n    mavenProvider: asFunction(\n      (mvnCli, mavenClient, logger) =>\n        new MavenSuggestionProvider(\n          mvnCli,\n          mavenClient,\n          logger.child({ namespace: 'maven provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.mavenProvider;\n}","import { ILogger } from 'core.logging';\nimport { UrlHelpers } from 'core.clients';\nimport { ISuggestionProvider, TSuggestionReplaceFunction } from 'core.suggestions';\nimport {\n  RequestFactory,\n  PackageResponse,\n  IPackageDependency\n} from 'core.packages';\n\nimport { MavenClientData } from './definitions/mavenClientData';\nimport { MvnCli } from './clients/mvnCli';\nimport { MavenClient } from './clients/mavenClient';\nimport * as MavenXmlFactory from './mavenXmlParserFactory';\nimport { MavenConfig } from './mavenConfig';\n\nexport class MavenSuggestionProvider implements ISuggestionProvider {\n\n  mvnCli: MvnCli;\n\n  config: MavenConfig;\n\n  client: MavenClient;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(mnvCli: MvnCli, client: MavenClient, logger: ILogger) {\n    this.mvnCli = mnvCli;\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = MavenXmlFactory.createDependenciesFromXml(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    // gets source feeds from the project path\n    const promisedRepos = this.mvnCli.fetchRepositories(packagePath);\n\n    return promisedRepos.then(repos => {\n\n      const repositories = repos.filter(\n        repo => repo.protocol === UrlHelpers.RegistryProtocols.https\n      );\n\n      const clientData: MavenClientData = { repositories }\n\n      return RequestFactory.executeDependencyRequests(\n        packagePath,\n        this.client,\n        clientData,\n        packageDependencies\n      );\n    })\n\n  }\n\n}","import { IPackageDependency } from 'core.packages';\n\nimport { MavenProjectProperty } from \"./definitions/mavenProjectProperty\";\n\nexport function createDependenciesFromXml(\n  xml: string, includePropertyNames: Array<string>\n): Array<IPackageDependency> {\n\n  const xmldoc = require('xmldoc');\n  let document = null\n\n  try {\n    document = new xmldoc.XmlDocument(xml);\n  } catch {\n    document = null;\n  }\n\n  if (!document) return [];\n\n  const properties = extractPropertiesFromDocument(document);\n\n  return extractPackageLensDataFromNodes(document, properties, includePropertyNames);\n}\n\nfunction extractPackageLensDataFromNodes(\n  xmlDoc, properties: Array<MavenProjectProperty>, includePropertyNames: Array<string>\n) {\n  const collector: Array<IPackageDependency> = [];\n\n  xmlDoc.eachChild(group => {\n\n    switch (group.name) {\n      case \"dependencies\":\n        group.eachChild(childNode => {\n          if (!includePropertyNames.includes(childNode.name)) return;\n          collectFromChildVersionTag(childNode, properties, collector)\n        });\n        break;\n\n      case \"parent\":\n        if (!includePropertyNames.includes(group.name)) return;\n        collectFromChildVersionTag(group, properties, collector)\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return collector;\n}\n\nfunction collectFromChildVersionTag(\n  parentNode,\n  properties: Array<MavenProjectProperty>,\n  collector: Array<IPackageDependency>\n) {\n  parentNode.eachChild(childNode => {\n    let versionNode;\n    if (childNode.name !== \"version\") return;\n\n    if (childNode.val.indexOf(\"$\") >= 0) {\n      let name = childNode.val.replace(/\\$|\\{|\\}/ig, '')\n      versionNode = properties.filter(property => {\n        return property.name === name\n      })[0]\n    } else {\n      versionNode = childNode;\n    }\n\n    const nameRange = {\n      start: parentNode.startTagPosition,\n      end: parentNode.startTagPosition,\n    };\n\n    const versionRange = {\n      start: versionNode.position,\n      end: versionNode.position + versionNode.val.length,\n    };\n\n    let group = parentNode.childNamed(\"groupId\").val\n    let artifact = parentNode.childNamed(\"artifactId\").val\n\n    let match = /\\$\\{(.*)\\}/ig.exec(artifact);\n    if (match) {\n      let property = properties.filter(property => property.name === match[1]);\n      artifact = artifact.replace(/\\$\\{.*\\}/ig, property[0].val)\n    }\n\n    const packageInfo = {\n      name: group + \":\" + artifact,\n      version: versionNode.val,\n    }\n\n    collector.push({\n      nameRange,\n      versionRange,\n      packageInfo\n    });\n  });\n}\n\nfunction extractPropertiesFromDocument(xmlDoc): Array<MavenProjectProperty> {\n  let properties: Array<MavenProjectProperty> = []\n  let propertiesCurrentPom = xmlDoc.descendantWithPath(\"properties\")\n  propertiesCurrentPom.eachChild(property => {\n\n    properties.push({\n      name: property.name,\n      val: property.val,\n      position: property.position\n    })\n  })\n  return properties;\n}\n\nexport function extractReposUrlsFromXml(stdout: string): Array<string> {\n  const xmldoc = require('xmldoc');\n  const regex = /<\\?xml(.+\\r?\\n?)+\\/settings>/gm;\n  const xmlString = regex.exec(stdout.toString())[0];\n  const xml = new xmldoc.XmlDocument(xmlString);\n\n  const localRepository = xml.descendantWithPath(\"localRepository\");\n\n  const results = [\n    localRepository.val\n  ];\n\n  let repositoriesXml = xml.descendantWithPath(\"profiles.profile.repositories\")\n    .childrenNamed(\"repository\");\n\n  repositoriesXml.forEach(repositoryXml => {\n    results.push(repositoryXml.childNamed(\"url\").val)\n  })\n\n  return results;\n}","export * from './src/definitions/eNpmContributions'\nexport * from './src/definitions/iPacote'\nexport * from './src/clients/githubClient'\nexport * from './src/clients/npmPackageClient'\nexport * from './src/clients/pacoteClient'\nexport * from './src/factories/packageFactory'\nexport * from './src/models/npaSpec'\nexport * from './src/options/githubOptions'\nexport * from './src/npmConfig'\nexport * from './src/npmSuggestionProvider'\nexport * from './src/npmUtils'\nexport * from './src/npmContainer'","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  HttpClientRequestMethods,\n  JsonClientResponse,\n  IJsonHttpClient\n} from 'core.clients';\nimport {\n  TPackageRequest,\n  PackageSourceTypes,\n  PackageVersionTypes,\n  VersionHelpers,\n  TPackageDocument,\n  DocumentFactory\n} from 'core.packages';\n\nimport { NpmConfig } from \"../npmConfig\";\nimport { NpaSpec } from \"../models/npaSpec\";\n\nconst defaultHeaders = {\n  accept: 'application\\/vnd.github.v3+json',\n  'user-agent': 'vscode-contrib/vscode-versionlens'\n};\n\nexport class GitHubClient {\n\n  config: NpmConfig;\n\n  logger: ILogger;\n\n  client: IJsonHttpClient;\n\n  constructor(config: NpmConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  fetchGithub(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    const { validRange } = require('semver');\n\n    if (npaSpec.gitRange) {\n      // we have a semver:x.x.x\n      return this.fetchTags(request, npaSpec);\n    }\n\n    if (validRange(npaSpec.gitCommittish, VersionHelpers.loosePrereleases)) {\n      // we have a #x.x.x\n      npaSpec.gitRange = npaSpec.gitCommittish;\n      return this.fetchTags(request, npaSpec);\n    }\n\n    // we have a #commit\n    return this.fetchCommits(request, npaSpec);\n  }\n\n  fetchTags(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    // todo pass in auth\n    const { user, project } = npaSpec.hosted;\n    const tagsRepoUrl = `https://api.github.com/repos/${user}/${project}/tags`;\n    const query = {};\n    const headers = this.getHeaders();\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      tagsRepoUrl,\n      query,\n      headers\n    )\n      .then(function (response: JsonClientResponse): TPackageDocument {\n        const { compareLoose } = require(\"semver\");\n\n        // extract versions\n        const tags = <[]>response.data;\n\n        const rawVersions = tags.map((tag: any) => tag.name);\n\n        const allVersions = VersionHelpers.filterSemverVersions(rawVersions).sort(compareLoose);\n\n        const source: PackageSourceTypes = PackageSourceTypes.Github;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const type: PackageVersionTypes = npaSpec.gitRange ?\n          PackageVersionTypes.Range :\n          PackageVersionTypes.Version;\n\n        const versionRange = npaSpec.gitRange;\n\n        const resolved = {\n          name: project,\n          version: versionRange,\n        };\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          allVersions\n        );\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions\n        };\n\n      });\n\n  }\n\n  fetchCommits(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    // todo pass in auth\n    const { user, project } = npaSpec.hosted;\n    const commitsRepoUrl = `https://api.github.com/repos/${user}/${project}/commits`;\n    const query = {};\n    const headers = this.getHeaders();\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      commitsRepoUrl,\n      query,\n      headers\n    )\n      .then((response: JsonClientResponse) => {\n\n        const commitInfos = <[]>response.data\n\n        const commits = commitInfos.map((commit: any) => commit.sha);\n\n        const source: PackageSourceTypes = PackageSourceTypes.Github;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const type = PackageVersionTypes.Committish;\n\n        const versionRange = npaSpec.gitCommittish;\n\n        if (commits.length === 0) {\n          // no commits found\n          return DocumentFactory.create(\n            PackageSourceTypes.Github,\n            request,\n            response,\n            [SuggestionFactory.createNotFound()]\n          )\n        }\n\n        const commitIndex = commits.findIndex(\n          commit => commit.indexOf(versionRange) > -1\n        );\n\n        const latestCommit = commits[commits.length - 1].substr(0, 8);\n\n        const noMatch = commitIndex === -1;\n\n        const isLatest = versionRange === latestCommit;\n\n        const resolved = {\n          name: project,\n          version: versionRange,\n        };\n\n        const suggestions = [];\n\n        if (noMatch) {\n          suggestions.push(\n            SuggestionFactory.createNoMatch(),\n            SuggestionFactory.createLatest(latestCommit)\n          );\n        } else if (isLatest) {\n          suggestions.push(\n            SuggestionFactory.createMatchesLatest(versionRange)\n          );\n        } else if (commitIndex > 0) {\n          suggestions.push(\n            SuggestionFactory.createFixedStatus(versionRange),\n            SuggestionFactory.createLatest(latestCommit)\n          );\n        }\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions,\n          gitSpec: npaSpec.saveSpec\n        };\n\n      });\n\n  }\n\n  getHeaders() {\n    const userHeaders = {};\n    if (this.config.github.accessToken && this.config.github.accessToken.length > 0) {\n      (<any>userHeaders).authorization = `token ${this.config.github.accessToken}`;\n    }\n    return Object.assign({}, userHeaders, defaultHeaders);\n  }\n\n}","import { ILogger } from 'core.logging';\nimport { SuggestionFactory, TPackageSuggestion } from 'core.suggestions';\nimport { ClientResponseSource } from 'core.clients';\nimport {\n  DocumentFactory,\n  ResponseFactory,\n  IPackageClient,\n  TPackageRequest,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\n\nimport * as PackageFactory from '../factories/packageFactory';\nimport { NpaSpec, NpaTypes } from '../models/npaSpec';\nimport * as NpmUtils from '../npmUtils';\nimport { NpmConfig } from '../npmConfig';\nimport { PacoteClient } from './pacoteClient';\nimport { GitHubClient } from './githubClient';\n\nexport class NpmPackageClient implements IPackageClient<null> {\n\n  logger: ILogger;\n\n  config: NpmConfig;\n\n  pacoteClient: PacoteClient;\n\n  githubClient: GitHubClient;\n\n  constructor(\n    config: NpmConfig,\n    pacoteClient: PacoteClient,\n    githubClient: GitHubClient,\n    logger: ILogger\n  ) {\n    this.config = config;\n\n    this.pacoteClient = pacoteClient;\n    this.githubClient = githubClient;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<null>): Promise<TPackageDocument> {\n    const npa = require('npm-package-arg');\n    let source: PackageSourceTypes;\n\n    return new Promise<TPackageDocument>((resolve, reject) => {\n      let npaSpec: NpaSpec;\n\n      // try parse the package\n      try {\n        npaSpec = npa.resolve(\n          request.package.name,\n          request.package.version,\n          request.package.path\n        );\n      }\n      catch (error) {\n        return reject(NpmUtils.convertNpmErrorToResponse(error, ClientResponseSource.local));\n      }\n\n      // return if directory or file document\n      if (npaSpec.type === NpaTypes.Directory || npaSpec.type === NpaTypes.File) {\n        source = PackageSourceTypes.Directory;\n        return resolve(\n          PackageFactory.createDirectory(\n            request.providerName,\n            request.package,\n            ResponseFactory.createResponseStatus(ClientResponseSource.local, 200),\n            npaSpec,\n          )\n        );\n      }\n\n      if (npaSpec.type === NpaTypes.Git) {\n\n        source = PackageSourceTypes.Git;\n\n        if (!npaSpec.hosted) {\n          // could not resolve\n          return reject({\n            status: 'EUNSUPPORTEDPROTOCOL',\n            data: 'Git url could not be resolved',\n            source: ClientResponseSource.local\n          });\n        }\n\n        if (!npaSpec.gitCommittish && npaSpec.hosted.default !== 'shortcut') {\n          return resolve(\n            DocumentFactory.createFixed(\n              request.providerName,\n              PackageSourceTypes.Git,\n              request.package,\n              ResponseFactory.createResponseStatus(ClientResponseSource.local, 0),\n              PackageVersionTypes.Committish,\n              'git repository'\n            )\n          );\n        }\n\n        // resolve tags, committishes\n        source = PackageSourceTypes.Github;\n        return resolve(this.githubClient.fetchGithub(request, npaSpec));\n      }\n\n      // otherwise return registry result\n      source = PackageSourceTypes.Registry;\n      return resolve(this.pacoteClient.fetchPackage(request, npaSpec));\n\n    }).catch(response => {\n\n      this.logger.debug(\"Caught exception from %s: %O\", source, response);\n\n      if (!response.data) {\n        response = NpmUtils.convertNpmErrorToResponse(\n          response,\n          ClientResponseSource.remote\n        );\n      }\n\n      const status = response.status &&\n        !Number.isInteger(response.status) &&\n        response.status.startsWith('E') ?\n        response.status.substr(1) :\n        response.status;\n\n      let suggestions: Array<TPackageSuggestion>;\n\n      if (status == 'CONNREFUSED')\n        suggestions = [SuggestionFactory.createConnectionRefused()];\n      else if (status == 'UNSUPPORTEDPROTOCOL' || response.data == 'Not implemented yet')\n        suggestions = [SuggestionFactory.createNotSupported()];\n      else if (status == 'INVALIDTAGNAME' || response.data.includes('Invalid comparator:'))\n        suggestions = [\n          SuggestionFactory.createInvalid(''),\n          SuggestionFactory.createLatest()\n        ];\n      else if (status == 128)\n        suggestions = [SuggestionFactory.createNotFound()]\n      else\n        suggestions = [SuggestionFactory.createFromHttpStatus(status)];\n\n      if (suggestions === null) return Promise.reject(response);\n\n      return DocumentFactory.create(\n        source,\n        request,\n        ResponseFactory.createResponseStatus(response.source, response.status),\n        suggestions\n      );\n\n    });\n\n  }\n\n}\n","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  TPackageRequest,\n  VersionHelpers,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\nimport { ClientResponseSource, AbstractCachedRequest } from 'core.clients';\n\nimport { NpmConfig } from '../npmConfig';\nimport { NpaSpec, NpaTypes } from '../models/npaSpec';\nimport * as NpmUtils from '../npmUtils';\n\nexport class PacoteClient extends AbstractCachedRequest<number, TPackageDocument> {\n\n  config: NpmConfig;\n\n  logger: ILogger;\n\n  pacote: any;\n\n  libnpmconfig: any;\n\n  constructor(config: NpmConfig, logger: ILogger) {\n    super(config.caching);\n    this.config = config;\n    this.logger = logger;\n\n    this.pacote = require('pacote');\n    this.libnpmconfig = require('libnpmconfig');\n  }\n\n  async fetchPackage(\n    request: TPackageRequest<null>, npaSpec: NpaSpec\n  ): Promise<TPackageDocument> {\n\n    const cacheKey = `${request.package.name}@${request.package.version}_${request.package.path}`;\n    if (this.cache.cachingOpts.duration > 0 && this.cache.hasExpired(cacheKey) === false) {\n      this.logger.debug(\"Fetching from cache using key: %s\", cacheKey);\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n\n      cachedResp.data.response.source = ClientResponseSource.cache;\n      return Promise.resolve(cachedResp.data);\n    }\n\n    // get npm config\n    const npmOpts = this.libnpmconfig.read(\n      {\n        where: request.package.path,\n        fullMetadata: false,\n        retry: {\n          retries: 0\n        }\n      },\n      {\n        cwd: request.package.path,\n      }\n    );\n\n    return this.pacote.packument(npaSpec, npmOpts)\n      .then(function (packumentResponse): TPackageDocument {\n\n        const { compareLoose } = require(\"semver\");\n\n        const { providerName } = request;\n\n        const source: PackageSourceTypes = PackageSourceTypes.Registry;\n\n        const type: PackageVersionTypes = <any>npaSpec.type;\n\n        let versionRange: string = (type === PackageVersionTypes.Alias) ?\n          npaSpec.subSpec.rawSpec :\n          npaSpec.rawSpec;\n\n        const resolved = {\n          name: (type === PackageVersionTypes.Alias) ?\n            npaSpec.subSpec.name :\n            npaSpec.name,\n          version: versionRange,\n        };\n\n        // extract raw versions and sort\n        const rawVersions = Object.keys(packumentResponse.versions || {}).sort(compareLoose);\n\n        // seperate versions to releases and prereleases\n        let { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          rawVersions\n        );\n\n        // extract prereleases from dist tags\n        const distTags = packumentResponse['dist-tags'] || {};\n        const latestTaggedVersion = distTags['latest'];\n\n        // extract releases\n        if (latestTaggedVersion) {\n          // cap the releases to the latest tagged version\n          releases = VersionHelpers.lteFromArray(\n            releases,\n            latestTaggedVersion\n          );\n        }\n\n        const response = {\n          source: ClientResponseSource.remote,\n          status: 200,\n        };\n\n        // use 'latest' tagged version from author?\n        const suggestLatestVersion = latestTaggedVersion || (\n          releases.length > 0 ?\n            // suggest latest release?\n            releases[releases.length - 1] :\n            // no suggestion\n            null\n        );\n\n        const requested = request.package;\n        if (npaSpec.type === NpaTypes.Tag) {\n\n          // get the tagged version. eg latest|next\n          versionRange = distTags[requested.version];\n          if (!versionRange) {\n\n            // No match\n            return DocumentFactory.createNoMatch(\n              providerName,\n              source,\n              type,\n              requested,\n              response,\n              suggestLatestVersion\n            );\n\n          }\n\n        }\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases,\n          suggestLatestVersion\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions,\n        };\n\n      }).then(document => {\n        this.createCachedResponse(\n          cacheKey,\n          200,\n          document,\n          false\n        );\n        return document;\n      }).catch(response => {\n        this.createCachedResponse(\n          cacheKey,\n          response.code,\n          response.message,\n          true\n        );\n        return Promise.reject(\n          NpmUtils.convertNpmErrorToResponse(\n            response,\n            ClientResponseSource.remote\n          )\n        );\n      });\n\n  }\n\n}","export enum GitHubContributions {\n  AccessToken = 'accessToken',\n}","export enum NpmContributions {\n  Caching = 'npm.caching',\n  Http = 'npm.http',\n\n  Github = 'npm.github',\n  DependencyProperties = 'npm.dependencyProperties',\n  DistTagFilter = 'npm.distTagFilter',\n}","import {\n  DocumentFactory,\n  TPackageIdentifier,\n  TPackageResponseStatus,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\nimport { TPackageSuggestion, SuggestionFlags } from 'core.suggestions';\n\nimport { NpaSpec } from '../models/npaSpec';\n\nexport const fileDependencyRegex = /^file:(.*)$/;\n\nexport function createDirectory(\n  providerName: string,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  npaSpec: NpaSpec\n): TPackageDocument {\n\n  const fileRegExpResult = fileDependencyRegex.exec(requested.version);\n  if (!fileRegExpResult) {\n    return DocumentFactory.createInvalidVersion(\n      providerName,\n      requested,\n      response,\n      <any>npaSpec.type // todo create a converter\n    );\n  }\n\n  const source = PackageSourceTypes.Directory;\n  const type = PackageVersionTypes.Version;\n\n  const resolved = {\n    name: npaSpec.name,\n    version: fileRegExpResult[1],\n  };\n\n  const suggestions: Array<TPackageSuggestion> = [\n    {\n      name: 'file://',\n      version: resolved.version,\n      flags: SuggestionFlags.release\n    },\n  ]\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved,\n    suggestions\n  };\n}","export enum NpaTypes {\n  Git = 'git',\n  Remote = 'remote',\n  File = 'file',\n  Directory = 'directory',\n\n  Tag = 'tag',\n  Version = 'version',\n  Range = 'range',\n  Alias = 'alias',\n}\n\nexport type NpaSpec = {\n  type: NpaTypes;\n  registry: boolean,\n  name: string,\n  scope: string,\n  escapedName: string,\n  rawSpec: any,\n  saveSpec: any,\n  fetchSpec: any,\n  subSpec: any,\n  gitRange: any,\n  gitCommittish: string,\n  hosted: any,\n  raw: string,\n}","import { ICachingOptions, IHttpOptions } from 'core.clients';\nimport { IFrozenOptions } from 'core.configuration';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { GitHubOptions } from './options/githubOptions';\nimport { NpmContributions } from './definitions/eNpmContributions';\n\nexport class NpmConfig implements IProviderConfig {\n\n  constructor(\n    config: IFrozenOptions,\n    caching: ICachingOptions,\n    http: IHttpOptions,\n    github: GitHubOptions,\n  ) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n    this.github = github;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'npm';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n    ProviderSupport.InstalledStatuses,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'json',\n    scheme: 'file',\n    pattern: '**/package.json',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  github: GitHubOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(NpmContributions.DependencyProperties);\n  }\n\n  get distTagFilter(): Array<string> {\n    return this.config.get(NpmContributions.DistTagFilter);\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient } from 'infrastructure.clients';\n\nimport { NpmContributions } from './definitions/eNpmContributions';\nimport { INpmContainerMap } from './definitions/iNpmContainerMap';\nimport { GitHubOptions } from './options/githubOptions';\nimport { NpmPackageClient } from './clients/npmPackageClient';\nimport { PacoteClient } from './clients/pacoteClient';\nimport { GitHubClient } from './clients/githubClient';\nimport { NpmSuggestionProvider } from './npmSuggestionProvider'\nimport { NpmConfig } from './npmConfig';\n\nexport function configureContainer(\n  container: AwilixContainer<INpmContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    npmCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        NpmContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    npmHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        NpmContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    npmGitHubOpts: asFunction(\n      rootConfig => new GitHubOptions(\n        rootConfig,\n        NpmContributions.Github,\n        'github'\n      )\n    ).singleton(),\n\n    // config\n    npmConfig: asFunction(\n      (rootConfig, npmCachingOpts, npmHttpOpts, npmGitHubOpts) =>\n        new NpmConfig(rootConfig, npmCachingOpts, npmHttpOpts, npmGitHubOpts)\n    ).singleton(),\n\n    // clients\n    githubJsonClient: asFunction(\n      (npmCachingOpts, npmHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: npmCachingOpts,\n            http: npmHttpOpts\n          },\n          logger.child({ namespace: 'npm request' })\n        )\n    ).singleton(),\n\n    githubClient: asFunction(\n      (npmConfig, githubJsonClient, logger) =>\n        new GitHubClient(\n          npmConfig,\n          githubJsonClient,\n          logger.child({ namespace: 'npm github' })\n        )\n    ).singleton(),\n\n    pacoteClient: asFunction(\n      (npmConfig, logger) =>\n        new PacoteClient(\n          npmConfig,\n          logger.child({ namespace: 'npm pacote' })\n        )\n    ).singleton(),\n\n    npmClient: asFunction(\n      (npmConfig, githubClient, pacoteClient, logger) =>\n        new NpmPackageClient(\n          npmConfig,\n          pacoteClient,\n          githubClient,\n          logger.child({ namespace: 'npm client' })\n        )\n    ).singleton(),\n\n    // provider\n    npmProvider: asFunction(\n      (npmClient, logger) =>\n        new NpmSuggestionProvider(\n          npmClient,\n          logger.child({ namespace: 'npm provider' })\n        )\n    ).singleton(),\n\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.npmProvider;\n}","import { ILogger } from 'core.logging';\nimport { ISuggestionProvider, TSuggestionReplaceFunction } from 'core.suggestions';\nimport {\n  extractPackageDependenciesFromJson,\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { NpmPackageClient } from './clients/npmPackageClient';\nimport { npmReplaceVersion } from './npmUtils';\nimport { NpmConfig } from './npmConfig';\n\nexport class NpmSuggestionProvider implements ISuggestionProvider {\n\n  config: NpmConfig;\n\n  client: NpmPackageClient;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(client: NpmPackageClient, logger: ILogger) {\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = npmReplaceVersion;\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromJson(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    if (this.config.github.accessToken &&\n      this.config.github.accessToken.length > 0) {\n      // defrost github parameters\n      this.config.github.defrost();\n    }\n\n    const clientData = null;\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n\n}","import {\n  VersionHelpers,\n  PackageSourceTypes,\n  PackageResponse,\n  PackageVersionTypes,\n} from 'core.packages';\nimport { ClientResponseSource, ClientResponse } from 'core.clients';\n\nexport function npmReplaceVersion(packageInfo: PackageResponse, newVersion: string): string {\n  if (packageInfo.source === PackageSourceTypes.Github) {\n    return replaceGitVersion(packageInfo, newVersion);\n  }\n\n  if (packageInfo.type === PackageVersionTypes.Alias) {\n    return replaceAliasVersion(packageInfo, newVersion);\n  }\n\n  // fallback to default\n  return VersionHelpers.formatWithExistingLeading(\n    packageInfo.requested.version,\n    newVersion\n  );\n}\n\nfunction replaceGitVersion(packageInfo: PackageResponse, newVersion: string): string {\n  return packageInfo.requested.version.replace(\n    packageInfo.resolved.version,\n    newVersion\n  )\n}\n\nfunction replaceAliasVersion(packageInfo: PackageResponse, newVersion: string): string {\n  // preserve the leading symbol from the existing version\n  const preservedLeadingVersion = VersionHelpers.formatWithExistingLeading(\n    packageInfo.requested.version,\n    newVersion\n  );\n\n  return `npm:${packageInfo.resolved.name}@${preservedLeadingVersion}`;\n}\n\nexport function convertNpmErrorToResponse(error, source: ClientResponseSource): ClientResponse<number, string> {\n  return {\n    source,\n    status: error.code,\n    data: error.message,\n  }\n}","import { Nullable } from 'core.generics';\nimport { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { GitHubContributions } from '../definitions/eGitHubContributions';\n\nexport class GitHubOptions extends OptionsWithFallback {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get accessToken(): string {\n    return this.getOrDefault<string>(\n      GitHubContributions.AccessToken,\n      null\n    );\n  }\n\n}","export * from './src/pubClient'\nexport * from './src/pubConfig'\nexport * from './src/pubSuggestionProvider'\nexport * from './src/pubUtils'\nexport * from './src/pubContainer'","export enum PubContributions {\n  Caching = 'pub.caching',\n  Http = 'pub.http',\n\n  DependencyProperties = 'pub.dependencyProperties',\n  ApiUrl = 'pub.apiUrl',\n}","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\n\nimport {\n  TPackageRequest,\n  DocumentFactory,\n  TPackageDocument,\n  PackageSourceTypes,\n  VersionHelpers,\n  TSemverSpec,\n  IPackageClient,\n} from 'core.packages';\n\nimport {\n  HttpClientRequestMethods,\n  HttpClientResponse,\n  IJsonHttpClient\n} from 'core.clients';\n\nimport { PubConfig } from './pubConfig';\n\nexport class PubClient implements IPackageClient<null> {\n\n  config: PubConfig;\n\n  client: IJsonHttpClient;\n\n  logger: ILogger;\n\n  constructor(config: PubConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<null>): Promise<TPackageDocument> {\n    const semverSpec = VersionHelpers.parseSemver(request.package.version);\n    const url = `${this.config.apiUrl}api/documentation/${request.package.name}`;\n\n    return this.createRemotePackageDocument(url, request, semverSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  async createRemotePackageDocument(\n    url: string,\n    request: TPackageRequest<null>,\n    semverSpec: TSemverSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {};\n    const headers = {};\n\n    return this.client.request(HttpClientRequestMethods.get, url, query, headers)\n      .then(function (httpResponse): TPackageDocument {\n\n        const packageInfo = httpResponse.data;\n\n        const { providerName } = request;\n\n        const versionRange = semverSpec.rawVersion;\n\n        const requested = request.package;\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        const rawVersions = VersionHelpers.extractVersionsFromMap(packageInfo.versions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(rawVersions)\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        // return PackageDocument\n        return {\n          providerName,\n          source: PackageSourceTypes.Registry,\n          response,\n          type: semverSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n\n      });\n  }\n\n}","import { ICachingOptions, IHttpOptions, UrlHelpers } from 'core.clients';\nimport { IFrozenOptions } from 'core.configuration';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { PubContributions } from './definitions/ePubContributions';\n\nexport class PubConfig implements IProviderConfig {\n\n  constructor(config: IFrozenOptions, caching: ICachingOptions, http: IHttpOptions) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'pub';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: \"yaml\",\n    scheme: \"file\",\n    pattern: \"**/pubspec.yaml\",\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(PubContributions.DependencyProperties);\n  }\n\n  get apiUrl(): string {\n    return UrlHelpers.ensureEndSlash(this.config.get(PubContributions.ApiUrl));\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient } from 'infrastructure.clients';\n\nimport { PubContributions } from './definitions/ePubContributions';\nimport { IPubContainerMap } from './definitions/iPubContainerMap';\nimport { PubSuggestionProvider } from './pubSuggestionProvider'\nimport { PubConfig } from './pubConfig';\nimport { PubClient } from './pubClient';\n\nexport function configureContainer(\n  container: AwilixContainer<IPubContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    pubCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        PubContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    pubHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        PubContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    pubConfig: asFunction(\n      (rootConfig, pubCachingOpts, pubHttpOpts) =>\n        new PubConfig(rootConfig, pubCachingOpts, pubHttpOpts)\n    ).singleton(),\n\n    // clients\n    pubJsonClient: asFunction(\n      (pubCachingOpts, pubHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: pubCachingOpts,\n            http: pubHttpOpts\n          },\n          logger.child({ namespace: 'pub request' })\n        )\n    ).singleton(),\n\n    pubClient: asFunction(\n      (pubConfig, pubJsonClient, logger) =>\n        new PubClient(\n          pubConfig,\n          pubJsonClient,\n          logger.child({ namespace: 'pub client' })\n        )\n    ).singleton(),\n\n    // provider\n    pubProvider: asFunction(\n      (pubClient, logger) =>\n        new PubSuggestionProvider(\n          pubClient,\n          logger.child({ namespace: 'pub provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap)\n\n  return container.cradle.pubProvider;\n}","import { ILogger } from 'core.logging';\nimport { ISuggestionProvider, TSuggestionReplaceFunction } from 'core.suggestions';\nimport {\n  extractPackageDependenciesFromYaml,\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { PubConfig } from './pubConfig';\nimport { PubClient } from './pubClient';\nimport { pubReplaceVersion } from './pubUtils';\n\nexport class PubSuggestionProvider implements ISuggestionProvider {\n\n  client: PubClient;\n\n  config: PubConfig;\n\n  logger: ILogger\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(client: PubClient, logger: ILogger) {\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = pubReplaceVersion\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromYaml(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    // this.customReplaceFn = pubReplaceVersion.bind(yamlText);\n\n    const clientData = null;\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n\n}","import { PackageResponse } from 'core.packages';\nimport { defaultReplaceFn } from 'core.suggestions';\n\nexport function pubReplaceVersion(\n  packageInfo: PackageResponse, newVersion: string\n): string {\n\n  const charAt = this.substr(packageInfo.versionRange.start, 1);\n\n  return defaultReplaceFn(\n    packageInfo,\n    // handle cases with blank entries and # comments\n    charAt === '#' ?\n      newVersion + ' ' :\n      newVersion\n  );\n\n}","export * from './src/definitions/iContainerMap';\nexport * from './src/definitions/eIconCommandContributions';\nexport * from './src/definitions/eStatusesContributions';\nexport * from './src/definitions/eSuggestionCommandContributions';\nexport * from './src/definitions/eSuggestionContributions';\nexport * from './src/definitions/eSuggestionIndicators';\n\nexport * from './src/commands/suggestionCommands';\nexport * from './src/commands/iconCommands';\n\nexport * from './src/events/textEditorEvents';\nexport * from './src/events/textDocumentEvents';\n\nexport * from './src/state/contextState';\nexport * from './src/state/versionLensState';\n\nexport * from './src/helpers/installedStatusHelpers';\nexport * as CommandHelpers from './src/helpers/commandHelpers';\n\nexport * from './src/versionLensExtension';\nexport * from './src/versionLensContainer';\n\nexport * as CommandFactory from './src/lenses/suggestionCommandFactory';\nexport * as VersionLensFactory from './src/lenses/versionLensFactory';\nexport * from './src/lenses/versionLensProvider';\nexport * from './src/lenses/versionLens';\n","// vscode references\nimport { basename } from 'path';\nimport * as minimatch from 'minimatch';\n\nimport * as VsCodeTypes from 'vscode';\n\nimport { ILogger } from 'core.logging';\n\nimport { CommandHelpers, VersionLensProvider } from 'presentation.extension';\n\nimport { IconCommandContributions } from '../definitions/eIconCommandContributions';\nimport * as InstalledStatusHelpers from '../helpers/installedStatusHelpers';\nimport { VersionLensState } from '../state/versionLensState';\n\nexport class IconCommands {\n\n  state: VersionLensState;\n\n  outputChannel: VsCodeTypes.OutputChannel;\n\n  versionLensProviders: Array<VersionLensProvider>;\n\n  constructor(\n    state: VersionLensState,\n    outputChannel: VsCodeTypes.OutputChannel,\n    versionLensProviders: Array<VersionLensProvider>\n  ) {\n    this.state = state;\n    this.outputChannel = outputChannel;\n    this.versionLensProviders = versionLensProviders;\n  }\n\n  onShowError(resourceUri: VsCodeTypes.Uri) {\n    return Promise.all([\n      this.state.providerError.change(false),\n      this.state.providerBusy.change(0)\n    ])\n      .then(_ => {\n        this.outputChannel.show();\n      });\n  }\n\n  onShowVersionLenses(resourceUri: VsCodeTypes.Uri) {\n    this.state.enabled.change(true)\n      .then(_ => {\n        this.refreshActiveCodeLenses();\n      });\n  }\n\n  onHideVersionLenses(resourceUri: VsCodeTypes.Uri) {\n    this.state.enabled.change(false)\n      .then(_ => {\n        this.refreshActiveCodeLenses();\n      });\n  }\n\n  onShowPrereleaseVersions(resourceUri: VsCodeTypes.Uri) {\n    this.state.prereleasesEnabled.change(true)\n      .then(_ => {\n        this.refreshActiveCodeLenses();\n      });\n  }\n\n  onHidePrereleaseVersions(resourceUri: VsCodeTypes.Uri) {\n    this.state.prereleasesEnabled.change(false)\n      .then(_ => {\n        this.refreshActiveCodeLenses();\n      });\n  }\n\n  onShowInstalledStatuses(resourceUri: VsCodeTypes.Uri) {\n    this.state.installedStatusesEnabled.change(true)\n      .then(_ => {\n        this.refreshActiveCodeLenses();\n      });\n  }\n\n  onHideInstalledStatuses(resourceUri: VsCodeTypes.Uri) {\n    this.state.installedStatusesEnabled.change(false)\n      .then(_ => {\n        InstalledStatusHelpers.clearDecorations();\n      });\n  }\n\n  onShowingProgress(resourceUri: VsCodeTypes.Uri) { }\n\n  refreshActiveCodeLenses() {\n    const { window } = require('vscode');\n    const fileName = window.activeTextEditor.document.fileName;\n    const providers = filtersProvidersByFileName(\n      fileName,\n      this.versionLensProviders\n    )\n    if (!providers) return false;\n\n    providers.forEach(\n      provider => {\n        provider.reloadCodeLenses()\n      }\n    );\n\n    return true;\n  }\n\n}\n\nexport function filtersProvidersByFileName(\n  fileName: string,\n  providers: Array<VersionLensProvider>\n): Array<VersionLensProvider> {\n\n  const filename = basename(fileName);\n\n  const filtered = providers.filter(\n    provider => minimatch(filename, provider.config.fileMatcher.pattern)\n  );\n\n  if (filtered.length === 0) return [];\n\n  return filtered;\n}\n\n\nexport function registerIconCommands(\n  state: VersionLensState,\n  versionLensProviders: Array<VersionLensProvider>,\n  subscriptions: Array<VsCodeTypes.Disposable>,\n  outputChannel: VsCodeTypes.OutputChannel,\n  logger: ILogger\n): IconCommands {\n\n  // create the dependency\n  const iconCommands = new IconCommands(\n    state,\n    outputChannel,\n    versionLensProviders\n  );\n\n  // register commands with vscode\n  subscriptions.push(\n    ...CommandHelpers.registerCommands(\n      IconCommandContributions,\n      <any>iconCommands,\n      logger\n    )\n  );\n\n  return iconCommands;\n}","import { dirname, resolve } from 'path';\nimport { workspace, WorkspaceEdit, Disposable, env } from 'vscode';\n\nimport { ILogger } from 'core.logging';\nimport { PackageSourceTypes } from 'core.packages';\n\nimport { CommandHelpers, VersionLens } from 'presentation.extension';\n\nimport { VersionLensState } from '../state/versionLensState';\nimport { SuggestionCommandContributions } from '../definitions/eSuggestionCommandContributions';\n\nexport class SuggestionCommands {\n\n  state: VersionLensState;\n\n  logger: ILogger;\n\n  constructor(state: VersionLensState, logger: ILogger) {\n    this.state = state;\n    this.logger = logger;\n  }\n\n  onUpdateDependencyCommand(codeLens: VersionLens, packageVersion: string) {\n    if ((<any>codeLens).__replaced) return Promise.resolve();\n\n    const edit = new WorkspaceEdit();\n    edit.replace(codeLens.documentUrl, codeLens.replaceRange, packageVersion);\n\n    return workspace.applyEdit(edit)\n      .then(done => (<any>codeLens).__replaced = true);\n  }\n\n  onLinkCommand(codeLens: VersionLens) {\n\n    if (codeLens.package.source !== PackageSourceTypes.Directory) {\n      this.logger.error(\n        \"onLinkCommand can only open local directories.\\nPackage: %o\",\n        codeLens.package\n      );\n      return;\n    }\n\n    const filePathToOpen = resolve(\n      dirname(codeLens.documentUrl.fsPath),\n      codeLens.package.resolved.version\n    );\n\n    env.openExternal(<any>('file:///' + filePathToOpen));\n  }\n\n}\n\nexport function registerSuggestionCommands(\n  state: VersionLensState,\n  subscriptions: Array<Disposable>,\n  logger: ILogger\n): SuggestionCommands {\n\n  // create the dependency\n  const suggestionCommands = new SuggestionCommands(state, logger);\n\n  // register commands with vscode\n  subscriptions.push(\n    ...CommandHelpers.registerCommands(\n      SuggestionCommandContributions,\n      <any>suggestionCommands,\n      logger\n    )\n  );\n\n  return suggestionCommands;\n}","import { AwilixContainer } from 'awilix';\n\nimport { ILogger } from 'core.logging';\nimport { ISuggestionProvider } from 'core.suggestions';\nimport { IProviderModule } from 'core.providers';\n\nimport { IContainerMap } from 'presentation.extension';\n\nexport async function registerSuggestionProviders(\n  providerNames: Array<string>,\n  container: AwilixContainer<IContainerMap>,\n  logger: ILogger\n): Promise<Array<ISuggestionProvider>> {\n\n  logger.debug('Registering providers %o', providerNames.join(', '));\n\n  const results = [];\n\n  const promised = providerNames.map(\n    function (providerName: string) {\n      return import(`infrastructure.providers/${providerName}/index`)\n        .then(\n          function (module: IProviderModule) {\n\n            logger.debug('Activating container scope for %s', providerName);\n\n            // create a container scope for the provider\n            const scopeContainer = container.createScope();\n            const provider = module.configureContainer(scopeContainer);\n\n            // register the provider\n            logger.debug(\n              \"Registered provider for %s:\\t file pattern: %s\\t caching: %s minutes\\t strict ssl: %s\",\n              providerName,\n              provider.config.fileMatcher.pattern,\n              provider.config.caching.duration,\n              provider.config.http.strictSSL,\n            );\n\n            results.push(provider);\n          }\n        )\n        .catch(error => {\n          logger.error(\n            'Could not register provider %s. Reason: %O',\n            providerName,\n            error,\n          );\n        });\n    }\n  );\n\n  await Promise.all(promised);\n\n  return results;\n}","import { languages, Disposable } from 'vscode';\n\nimport { ILogger } from \"core.logging\";\nimport { ISuggestionProvider } from \"core.suggestions\";\n\nimport { VersionLensExtension, VersionLensProvider } from \"presentation.extension\";\n\nexport function registerVersionLensProviders(\n  extension: VersionLensExtension,\n  suggestionProviders: Array<ISuggestionProvider>,\n  subscriptions: Array<Disposable>,\n  logger: ILogger\n): Array<VersionLensProvider> {\n\n  const results = [];\n\n  suggestionProviders.forEach(\n    function (provider: ISuggestionProvider) {\n      const versionLensProvider = new VersionLensProvider(\n        extension,\n        provider,\n        logger.child({ namespace: `${provider.config.providerName} codelens` })\n      );\n\n      results.push(versionLensProvider);\n\n      // register the codelens provider with vscode\n      const sub = languages.registerCodeLensProvider(\n        versionLensProvider.documentSelector,\n        versionLensProvider\n      );\n\n      // give vscode the command disposable\n      subscriptions.push(sub);\n    }\n  )\n\n  return results;\n}","export enum IconCommandContributions {\n  ShowError = 'versionlens.onShowError',\n  ShowingProgress = 'versionlens.onShowingProgress',\n  ShowInstalledStatuses = 'versionlens.onShowInstalledStatuses',\n  HideInstalledStatuses = 'versionlens.onHideInstalledStatuses',\n  ShowPrereleaseVersions = 'versionlens.onShowPrereleaseVersions',\n  HidePrereleaseVersions = 'versionlens.onHidePrereleaseVersions',\n  ShowVersionLenses = 'versionlens.onShowVersionLenses',\n  HideVersionLenses = 'versionlens.onHideVersionLenses',\n}","export enum StateContributions {\n  Enabled = 'versionlens.enabled',\n  PrereleasesEnabled = 'versionlens.prereleasesEnabled',\n  ProviderActive = 'versionlens.providerActive',\n  ProviderBusy = 'versionlens.providerBusy',\n  ProviderError = 'versionlens.providerError',\n  ProviderSupportsPrereleases = 'versionlens.providerSupportsPrereleases',\n  ProviderSupportsInstalledStatuses = 'versionlens.providerSupportsInstalledStatuses',\n  InstalledStatusesEnabled = 'versionlens.installedStatusesEnabled',\n}","export enum StatusesContributions {\n  ShowOnStartup = 'statuses.showOnStartup',\n  NotInstalledColour = 'statuses.notInstalledColour',\n  InstalledColour = 'statuses.installedColour',\n  OutdatedColour = 'statuses.outdatedColour',\n  prereleaseInstalledColour = 'statuses.prereleaseInstalledColour',\n}","export enum SuggestionCommandContributions {\n  UpdateDependencyCommand = 'versionlens.onUpdateDependencyCommand',\n  LinkCommand = \"versionlens.onLinkCommand\"\n}","export enum SuggestionContributions {\n  // DefaultVersionPrefix = 'versionlens.suggestions.defaultVersionPrefix',\n  ShowOnStartup = 'suggestions.showOnStartup',\n  ShowPrereleasesOnStartup = 'suggestions.showPrereleasesOnStartup',\n}\n","export enum SuggestionIndicators {\n  Update = '\\u2191',\n  Revert = '\\u2193',\n  OpenNewWindow = '\\u29C9',\n}","// vscode references\nimport * as VsCodeTypes from 'vscode';\n\nimport { ILogger } from 'core.logging';\nimport { VersionLensState } from '../state/versionLensState';\nimport * as InstalledStatusHelpers from '../helpers/installedStatusHelpers';\n\nexport class TextDocumentEvents {\n\n  state: VersionLensState;\n\n  logger: ILogger;\n\n  constructor(extensionState: VersionLensState, logger: ILogger) {\n    this.state = extensionState;\n    this.logger = logger;\n\n    // register editor events\n    const { workspace } = require('vscode');\n\n    // register window and workspace events\n    workspace.onDidChangeTextDocument(\n      this.onDidChangeTextDocument.bind(this)\n    );\n  }\n\n  onDidChangeTextDocument(changeEvent: VsCodeTypes.TextDocumentChangeEvent) {\n    // ensure version lens is active\n    if (this.state.providerActive.value === false) return;\n\n    const foundDecorations = [];\n    const { contentChanges } = changeEvent;\n\n    // get all decorations for all the lines that have changed\n    contentChanges.forEach(change => {\n      const startLine = change.range.start.line;\n      let endLine = change.range.end.line;\n\n      if (change.text.charAt(0) == '\\n' || endLine > startLine) {\n        InstalledStatusHelpers.removeDecorationsFromLine(startLine)\n        return;\n      }\n\n      for (let line = startLine; line <= endLine; line++) {\n        const lineDecorations = InstalledStatusHelpers.getDecorationsByLine(line);\n        if (lineDecorations.length > 0)\n          foundDecorations.push(...lineDecorations);\n      }\n    })\n\n    if (foundDecorations.length === 0) return;\n\n    // remove all decorations that have changed\n    InstalledStatusHelpers.removeDecorations(foundDecorations);\n  }\n\n}\n","import { window, TextEditor } from 'vscode';\n\nimport { ProviderSupport } from 'core.providers';\nimport { ISuggestionProvider, filtersProvidersByFileName } from 'core.suggestions';\n\nimport { ILoggerTransport } from 'infrastructure.logging';\n\nimport { VersionLensState } from '../state/versionLensState';\n\nexport class TextEditorEvents {\n\n  constructor(\n    state: VersionLensState,\n    suggestionProviders: Array<ISuggestionProvider>,\n    loggerTransport: ILoggerTransport\n  ) {\n    this.state = state;\n    this.suggestionProviders = suggestionProviders;\n    this.loggerTransport = loggerTransport;\n\n    // register editor events\n    window.onDidChangeActiveTextEditor(\n      this.onDidChangeActiveTextEditor.bind(this)\n    );\n  }\n\n  state: VersionLensState;\n\n  suggestionProviders: Array<ISuggestionProvider>;\n\n  loggerTransport: ILoggerTransport;\n\n  onDidChangeActiveTextEditor(textEditor: TextEditor) {\n    // maintain versionLens.providerActive state\n    // each time the active editor changes\n\n    if (!textEditor) {\n      // disable icons when no editor\n      this.state.providerActive.value = false;\n      return;\n    }\n\n    if (textEditor.document.uri.scheme !== 'file') return;\n\n    const providersMatchingFilename = filtersProvidersByFileName(\n      textEditor.document.fileName,\n      this.suggestionProviders\n    );\n\n    if (providersMatchingFilename.length === 0) {\n      // disable icons if no match found\n      this.state.providerActive.value = false;\n      return;\n    }\n\n    // ensure the latest logging level is set\n    this.loggerTransport.updateLevel();\n\n    // determine prerelease support\n    const providerSupportsPrereleases = providersMatchingFilename.reduce(\n      (v, p) => p.config.supports.includes(ProviderSupport.Prereleases)\n      , false\n    );\n\n    // determine installed statuses support\n    const providerSupportsInstalledStatuses = providersMatchingFilename.reduce(\n      (v, p) => p.config.supports.includes(ProviderSupport.InstalledStatuses)\n      , false\n    );\n\n    this.state.providerSupportsPrereleases.value = providerSupportsPrereleases;\n    this.state.providerSupportsInstalledStatuses.value = providerSupportsInstalledStatuses;\n    this.state.providerActive.value = true;\n  }\n\n}","// vscode references\nimport * as VsCodeTypes from 'vscode';\n\nimport { KeyDictionary } from 'core.generics';\nimport { ILogger } from 'core.logging';\n\nexport function registerCommands(\n  contributions: KeyDictionary<string>,\n  handlers: KeyDictionary<Function>,\n  logger: ILogger\n): Array<VsCodeTypes.Disposable> {\n\n  const { commands } = require('vscode');\n  const disposables = [];\n\n  // loop enum keys\n  Object.keys(contributions)\n    .forEach(enumKey => {\n\n      // register command\n      const command = contributions[enumKey];\n      const handler = handlers[`on${enumKey}`];\n      if (!handler) {\n        // todo roll up errors to a semantic factory\n        const msg = `Could not find %s handler on %s class`;\n        logger.error(msg, command, handler.name)\n        // just return here?\n        throw new Error(`Could not find ${command} handler on ${handler.name} class`)\n      }\n\n      // collect disposables\n      disposables.push(\n        commands.registerCommand(command, handler.bind(handlers))\n      )\n    });\n\n  return disposables;\n}","// vscode references\nimport { window, Range, Position } from 'vscode';\n\nlet _decorations = [];\nconst _decorationTypeKey = window.createTextEditorDecorationType({});\n\nexport function clearDecorations() {\n  if (!window || !window.activeTextEditor) return;\n\n  _decorations = [];\n  window.activeTextEditor.setDecorations(\n    _decorationTypeKey,\n    []\n  );\n}\n\nexport function setDecorations(decorationList) {\n  if (!window || !window.activeTextEditor)\n    return;\n\n  window.activeTextEditor.setDecorations(\n    _decorationTypeKey,\n    decorationList\n  );\n}\n\nexport function removeDecorations(removeDecorationList) {\n  if (removeDecorationList.length === 0 || _decorations.length === 0)\n    return;\n\n  const newDecorations = []\n  for (let i = 0; i < _decorations.length; i++) {\n    const foundIndex = removeDecorationList.indexOf(_decorations[i]);\n    if (foundIndex === -1)\n      newDecorations.push(_decorations[i]);\n  }\n\n  _decorations = newDecorations;\n  window.activeTextEditor.setDecorations(\n    _decorationTypeKey,\n    _decorations\n  );\n}\n\nexport function removeDecorationsFromLine(lineNum) {\n  const results = [];\n  for (let i = 0; i < _decorations.length; i++) {\n    const entry = _decorations[i];\n    if (entry.range.start.line >= lineNum) {\n      results.push(entry);\n    }\n  }\n  removeDecorations(results);\n}\n\nexport function getDecorationsByLine(lineToFilterBy) {\n  const results = [];\n  for (let i = 0; i < _decorations.length; i++) {\n    const entry = _decorations[i];\n    if (entry.range.start.line === lineToFilterBy) {\n      results.push(entry);\n    }\n  }\n\n  return results;\n}\n\nexport function createRenderOptions(contentText, color) {\n  return {\n    contentText,\n    color\n  };\n}\n\nexport function renderMissingDecoration(range: Range, missingStatusColour: string) {\n  updateDecoration({\n    range: new Range(\n      range.start,\n      new Position(range.end.line, range.end.character + 1)\n    ),\n    hoverMessage: null,\n    renderOptions: {\n      after: createRenderOptions(\n        ' ▪ missing install',\n        missingStatusColour\n      )\n    }\n  });\n}\n\nexport function renderInstalledDecoration(\n  range: Range,\n  version: string,\n  installedStatusColour: string) {\n\n  updateDecoration({\n    range: new Range(\n      range.start,\n      new Position(range.end.line, range.end.character + 1)\n    ),\n    hoverMessage: null,\n    renderOptions: {\n      after: createRenderOptions(\n        ` ▪ ${version} installed`,\n        installedStatusColour\n      )\n    }\n  });\n}\n\nexport function renderNeedsUpdateDecoration(\n  range: Range,\n  version: string,\n  outdatedStatusColour: string\n) {\n\n  updateDecoration({\n    range: new Range(\n      range.start,\n      new Position(range.end.line, range.end.character + 1)\n    ),\n    hoverMessage: null,\n    renderOptions: {\n      after: createRenderOptions(\n        ` ▪ ${version} installed, npm update needed`,\n        outdatedStatusColour\n      )\n    }\n  });\n}\n\nexport function renderOutdatedDecoration(\n  range: Range,\n  version: string,\n  outdatedStatusColour: string\n) {\n\n  updateDecoration({\n    range: new Range(\n      range.start,\n      new Position(range.end.line, range.end.character + 1)\n    ),\n    hoverMessage: null,\n    renderOptions: {\n      after: createRenderOptions(\n        ` ▪ ${version} installed`,\n        outdatedStatusColour\n      )\n    }\n  });\n}\n\nexport function renderPrereleaseInstalledDecoration(\n  range: Range,\n  version: string,\n  prereleaseInstalledStatusColour: string\n) {\n  updateDecoration({\n    range: new Range(\n      range.start,\n      new Position(range.end.line, range.end.character + 1)\n    ),\n    hoverMessage: null,\n    renderOptions: {\n      after: createRenderOptions(\n        ` ▪ ${version} prerelease installed`,\n        prereleaseInstalledStatusColour\n      )\n    }\n  });\n}\n\nfunction updateDecoration(newDecoration) {\n  const foundIndex = _decorations.findIndex(\n    entry => entry.range.start.line === newDecoration.range.start.line\n  );\n\n  if (foundIndex > -1)\n    _decorations[foundIndex] = newDecoration;\n  else\n    _decorations.push(newDecoration);\n\n  setDecorations(_decorations);\n}","import { SuggestionFlags } from 'core.suggestions';\n\nimport {\n  SuggestionIndicators,\n  VersionLens,\n  SuggestionCommandContributions\n} from 'presentation.extension';\n\nexport function createErrorCommand(errorMsg, codeLens) {\n  return codeLens.setCommand(`${errorMsg}`);\n}\n\nexport function createTagCommand(tag, codeLens) {\n  return codeLens.setCommand(tag);\n}\n\nexport function createDirectoryLinkCommand(codeLens) {\n  let title;\n  let cmd = SuggestionCommandContributions.LinkCommand;\n  const path = require('path');\n  const fs = require('fs');\n  const filePath = path.resolve(path.dirname(codeLens.documentUrl.fsPath), codeLens.package.suggestion.version);\n  const fileExists = fs.existsSync(filePath);\n  if (fileExists === false)\n    title = (cmd = null) || 'Specified resource does not exist';\n  else\n    title = `${SuggestionIndicators.OpenNewWindow} ${codeLens.package.requested.version}`;\n\n  return codeLens.setCommand(title, cmd, [codeLens]);\n}\n\nexport function createSuggestedVersionCommand(codeLens: VersionLens) {\n  const { name, version, flags } = codeLens.package.suggestion;\n  const isStatus = (flags & SuggestionFlags.status);\n  const isTag = (flags & SuggestionFlags.tag);\n  const isPrerelease = flags & SuggestionFlags.prerelease;\n\n  if (!isStatus) {\n    const replaceWithVersion: string = isPrerelease || isTag ?\n      version :\n      codeLens.replaceVersionFn(codeLens.package, version);\n\n    const prefix = isTag ? '' : name + ': ';\n    return codeLens.setCommand(\n\n      `${prefix}${SuggestionIndicators.Update} ${version}`,\n      SuggestionCommandContributions.UpdateDependencyCommand,\n      [codeLens, `${replaceWithVersion}`]\n    );\n  }\n\n  // show the status\n  return createTagCommand(`${name} ${version}`.trimEnd(), codeLens);\n}","import { CodeLens, Range, Uri } from 'vscode';\nimport { TSuggestionReplaceFunction } from 'core.suggestions';\nimport {\n  PackageResponse,\n  PackageResponseErrors,\n  PackageSourceTypes\n} from 'core.packages';\n\nexport class VersionLens extends CodeLens {\n\n  replaceRange: Range;\n\n  package: PackageResponse;\n\n  documentUrl: Uri;\n\n  replaceVersionFn: TSuggestionReplaceFunction;\n\n  command: any;\n\n  constructor(\n    commandRange: Range,\n    replaceRange: Range,\n    packageResponse: PackageResponse,\n    documentUrl: Uri,\n    replaceVersionFn: TSuggestionReplaceFunction\n  ) {\n    super(commandRange);\n    this.replaceRange = replaceRange || commandRange;\n    this.package = packageResponse;\n    this.documentUrl = documentUrl;\n    this.command = null;\n    this.replaceVersionFn = replaceVersionFn;\n  }\n\n  hasPackageSource(source: PackageSourceTypes): boolean {\n    return this.package.source === source;\n  }\n\n  hasPackageError(error: PackageResponseErrors): boolean {\n    return this.package.error == error;\n  }\n\n  setCommand(title: string, command, args) {\n    this.command = {\n      title,\n      command,\n      arguments: args\n    };\n    return this;\n  }\n\n}","import { TextDocument } from 'vscode';\nimport { TSuggestionReplaceFunction } from 'core.suggestions';\nimport { PackageResponse } from 'core.packages';\n\nimport { VersionLens } from './versionLens';\n\nexport function createFromPackageResponses(\n  document: TextDocument,\n  responses: Array<PackageResponse>,\n  replaceVersionFn: TSuggestionReplaceFunction,\n): Array<VersionLens> {\n  return responses.map(\n    function (response) {\n      return createFromPackageResponse(\n        response,\n        document,\n        replaceVersionFn\n      );\n    }\n  );\n}\n\nfunction createFromPackageResponse(\n  packageResponse: PackageResponse,\n  document: TextDocument,\n  replaceVersionFn: TSuggestionReplaceFunction,\n): VersionLens {\n  const { Uri, Range } = require('vscode')\n\n  const { nameRange, versionRange } = packageResponse;\n  const commandRangePos = nameRange.start + packageResponse.order;\n  const commandRange = new Range(\n    document.positionAt(commandRangePos),\n    document.positionAt(commandRangePos)\n  );\n  const replaceRange = new Range(\n    document.positionAt(versionRange.start),\n    document.positionAt(versionRange.end)\n  );\n  return new VersionLens(\n    commandRange,\n    replaceRange,\n    packageResponse,\n    Uri.file(document.fileName),\n    replaceVersionFn.bind(document.getText())\n  );\n}","import { dirname } from 'path';\n\nimport {\n  EventEmitter,\n  TextDocument,\n  CancellationToken,\n  CodeLensProvider,\n  CodeLens,\n  Event,\n  DocumentSelector\n} from 'vscode';\n\nimport { ILogger } from 'core.logging';\nimport {\n  ISuggestionProvider,\n  SuggestionFlags,\n  SuggestionStatus,\n  defaultReplaceFn,\n} from 'core.suggestions';\nimport { IProviderConfig } from 'core.providers';\nimport { PackageSourceTypes, PackageResponseErrors } from 'core.packages';\n\nimport {\n  CommandFactory,\n  VersionLens,\n  VersionLensFactory,\n  VersionLensExtension,\n  VersionLensState\n} from 'presentation.extension';\n\nexport class VersionLensProvider implements CodeLensProvider {\n\n  constructor(\n    extension: VersionLensExtension,\n    suggestionProvider: ISuggestionProvider,\n    logger: ILogger\n  ) {\n    this.extension = extension;\n    this.suggestionProvider = suggestionProvider;\n    this.logger = logger;\n\n    this.notifyCodeLensesChanged = new EventEmitter();\n    this.onDidChangeCodeLenses = this.notifyCodeLensesChanged.event;\n  }\n\n  notifyCodeLensesChanged: EventEmitter<void>;\n\n  onDidChangeCodeLenses: Event<void>;\n\n  extension: VersionLensExtension;\n\n  suggestionProvider: ISuggestionProvider;\n\n  logger: ILogger;\n\n  get config(): IProviderConfig {\n    return this.suggestionProvider.config;\n  }\n\n  get state(): VersionLensState {\n    return this.extension.state;\n  }\n\n  get documentSelector(): DocumentSelector {\n    return this.suggestionProvider.config.fileMatcher;\n  }\n\n  reloadCodeLenses() {\n    this.notifyCodeLensesChanged.fire();\n  }\n\n  provideCodeLenses(\n    document: TextDocument, token: CancellationToken\n  ): Promise<Array<CodeLens>> {\n    if (this.state.enabled.value === false) return null;\n\n    // package path\n    const packagePath = dirname(document.uri.fsPath);\n\n    // clear any errors\n    this.state.providerError.value = false;\n\n    // set in progress\n    this.state.providerBusy.value++;\n\n    this.logger.info(\n      \"Analysing %s dependencies in %s\",\n      this.config.providerName,\n      document.uri.fsPath\n    );\n\n    // unfreeze config per file request\n    this.config.caching.defrost();\n\n    this.logger.debug(\n      \"Caching duration is set to %s milliseconds\",\n      this.config.caching.duration\n    );\n\n    // get the dependencies\n    const packageDeps = this.suggestionProvider.parseDependencies(document.getText());\n\n    // fetch suggestions\n    return this.suggestionProvider.fetchSuggestions(packagePath, packageDeps)\n      .then(responses => {\n\n        this.state.providerBusy.value--;\n\n        if (responses === null) {\n          this.logger.info(\n            \"No %s dependencies found in %s\",\n            this.config.providerName,\n            document.uri.fsPath\n          );\n          return null;\n        }\n\n        this.logger.info(\n          \"Resolved %s %s dependencies\",\n          responses.length,\n          this.config.providerName\n        );\n\n        if (this.state.prereleasesEnabled.value === false) {\n          responses = responses.filter(\n            function (response) {\n              const { suggestion } = response;\n              return (suggestion.flags & SuggestionFlags.prerelease) === 0 ||\n                suggestion.name.includes(SuggestionStatus.LatestIsPrerelease);\n            }\n          )\n        }\n\n        return <any>VersionLensFactory.createFromPackageResponses(\n          document,\n          responses,\n          this.suggestionProvider.suggestionReplaceFn || defaultReplaceFn\n        );\n      })\n      .catch(error => {\n        this.state.providerError.value = true;\n        this.state.providerBusy.change(0)\n        return Promise.reject(error);\n      })\n  }\n\n  async resolveCodeLens(\n    codeLens: CodeLens, token: CancellationToken\n  ): Promise<CodeLens> {\n    if (codeLens instanceof VersionLens) {\n      // evaluate the code lens\n      const evaluated = this.evaluateCodeLens(codeLens, token);\n\n      // update the progress\n      return Promise.resolve(evaluated);\n    }\n  }\n\n  evaluateCodeLens(codeLens: VersionLens, token: CancellationToken) {\n    if (codeLens.hasPackageSource(PackageSourceTypes.Directory))\n      return CommandFactory.createDirectoryLinkCommand(codeLens);\n\n    return CommandFactory.createSuggestedVersionCommand(codeLens)\n  }\n\n}","import { IConfig } from 'core.configuration';\n\nimport { StatusesContributions } from '../definitions/eStatusesContributions';\n\nexport class StatusesOptions {\n\n  private config: IConfig;\n\n  constructor(config: IConfig) {\n    this.config = config;\n  }\n\n  get showOnStartup() {\n    return this.config.get<boolean>(StatusesContributions.ShowOnStartup);\n  }\n\n  get installedColour() {\n    return this.config.get<string>(StatusesContributions.InstalledColour);\n  }\n\n  get notInstalledColour() {\n    return this.config.get<string>(StatusesContributions.NotInstalledColour);\n  }\n\n  get outdatedColour() {\n    return this.config.get<string>(StatusesContributions.OutdatedColour);\n  }\n\n  get prereleaseInstalledColour() {\n    return this.config.get<string>(StatusesContributions.prereleaseInstalledColour);\n  }\n\n}","import { IConfig } from 'core.configuration';\n\nimport { SuggestionContributions } from '../definitions/eSuggestionContributions';\n\nexport class SuggestionsOptions {\n\n  private config: IConfig;\n\n  constructor(config: IConfig) {\n    this.config = config;\n  }\n\n  get showOnStartup(): boolean {\n    return this.config.get<boolean>(\n      SuggestionContributions.ShowOnStartup\n    );\n  }\n\n  get showPrereleasesOnStartup(): boolean {\n    return this.config.get<boolean>(\n      SuggestionContributions.ShowPrereleasesOnStartup\n    );\n  }\n\n}","import { commands } from 'vscode';\n\nexport class ContextState<T> {\n\n  private key: string;\n  private _value: T;\n\n  constructor(key: string, defaultValue: T) {\n    this.key = key;\n    this.change(defaultValue);\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  set value(newValue: T) {\n    this.change(newValue);\n  }\n\n  change(newValue: T): Thenable<T> {\n    this._value = newValue;\n    return commands.executeCommand(\n      'setContext',\n      this.key,\n      newValue\n    );\n  }\n\n}","import { StateContributions } from \"../definitions/eStateContributions\";\nimport { ContextState } from \"./contextState\";\nimport { VersionLensExtension } from \"../versionLensExtension\";\n\nexport class VersionLensState {\n\n  // states\n  enabled: ContextState<boolean>;\n  prereleasesEnabled: ContextState<boolean>;\n  installedStatusesEnabled: ContextState<boolean>;\n\n  providerActive: ContextState<boolean>;\n  providerBusy: ContextState<number>;\n  providerError: ContextState<boolean>;\n\n  providerSupportsPrereleases: ContextState<boolean>;\n  providerSupportsInstalledStatuses: ContextState<boolean>;\n\n  constructor(extension: VersionLensExtension) {\n\n    this.enabled = new ContextState(\n      StateContributions.Enabled,\n      extension.suggestions.showOnStartup\n    );\n\n    this.prereleasesEnabled = new ContextState(\n      StateContributions.PrereleasesEnabled,\n      extension.suggestions.showPrereleasesOnStartup\n    );\n\n    this.installedStatusesEnabled = new ContextState(\n      StateContributions.InstalledStatusesEnabled,\n      extension.statuses.showOnStartup\n    );\n\n    this.providerActive = new ContextState(\n      StateContributions.ProviderActive,\n      false\n    );\n\n    this.providerBusy = new ContextState(\n      StateContributions.ProviderBusy,\n      0\n    );\n\n    this.providerError = new ContextState(\n      StateContributions.ProviderError,\n      false\n    );\n\n    this.providerSupportsPrereleases = new ContextState(\n      StateContributions.ProviderSupportsPrereleases,\n      false\n    );\n\n    this.providerSupportsInstalledStatuses = new ContextState(\n      StateContributions.ProviderSupportsInstalledStatuses,\n      false\n    );\n\n  }\n\n}","import { workspace, window, ExtensionContext } from 'vscode';\n\nimport {\n  createContainer,\n  asValue,\n  asFunction,\n  InjectionMode,\n  AwilixContainer\n} from 'awilix';\n\nimport { LoggingOptions } from 'core.logging';\nimport { HttpOptions, CachingOptions } from 'core.clients';\n\nimport { VsCodeConfig } from 'infrastructure.configuration';\nimport { createWinstonLogger, OutputChannelTransport } from 'infrastructure.logging';\n\nimport {\n  VersionLensExtension,\n  registerIconCommands,\n  registerSuggestionCommands,\n  TextEditorEvents\n} from 'presentation.extension';\n\nimport { IContainerMap } from './definitions/iContainerMap';\nimport { registerSuggestionProviders } from './container/registerSuggestionProviders';\nimport { registerVersionLensProviders } from './container/registerVersionLensProviders';\n\nexport async function configureContainer(\n  context: ExtensionContext\n): Promise<AwilixContainer<IContainerMap>> {\n\n  const container: AwilixContainer<IContainerMap> = createContainer({\n    injectionMode: InjectionMode.CLASSIC\n  });\n\n  const containerMap = {\n\n    extensionName: asValue(VersionLensExtension.extensionName),\n\n    // maps to the vscode configuration\n    rootConfig: asFunction(\n      extensionName => new VsCodeConfig(workspace, extensionName.toLowerCase())\n    ).singleton(),\n\n    // logging options\n    loggingOptions: asFunction(\n      rootConfig => new LoggingOptions(rootConfig, 'logging')\n    ).singleton(),\n\n    httpOptions: asFunction(\n      rootConfig => new HttpOptions(rootConfig, 'http')\n    ).singleton(),\n\n    cachingOptions: asFunction(\n      rootConfig => new CachingOptions(rootConfig, 'caching')\n    ).singleton(),\n\n    // logging\n    outputChannel: asFunction(\n      extensionName => window.createOutputChannel(extensionName)\n    ).singleton(),\n\n    outputChannelTransport: asFunction(\n      (outputChannel, loggingOptions) =>\n        new OutputChannelTransport(outputChannel, loggingOptions)\n    ).singleton(),\n\n    logger: asFunction(\n      (outputChannelTransport) =>\n        createWinstonLogger(outputChannelTransport, { namespace: 'extension' })\n    ).singleton(),\n\n    // extension\n    extension: asFunction(\n      rootConfig => new VersionLensExtension(rootConfig)\n    ).singleton(),\n\n    // commands\n    subscriptions: asValue(context.subscriptions),\n\n    iconCommands: asFunction(\n      (extension, versionLensProviders, subscriptions, outputChannel, logger) =>\n        registerIconCommands(\n          extension.state,\n          versionLensProviders,\n          subscriptions,\n          outputChannel,\n          logger.child({ namespace: 'icon commands' })\n        )\n    ).singleton(),\n\n    suggestionCommands: asFunction(\n      (extension, subscriptions, logger) =>\n        registerSuggestionCommands(\n          extension.state,\n          subscriptions,\n          logger.child({ namespace: 'suggestion commands' })\n        )\n    ).singleton(),\n\n    // events\n    textEditorEvents: asFunction(\n      (extension, suggestionProviders, outputChannelTransport) =>\n        new TextEditorEvents(\n          extension.state,\n          suggestionProviders,\n          outputChannelTransport\n        )\n    ).singleton(),\n\n    // codelens providers\n    providerNames: asValue([\n      'composer',\n      'dotnet',\n      'dub',\n      'jspm',\n      'maven',\n      'npm',\n      'pub',\n    ]),\n\n    versionLensProviders: asFunction(\n      (extension, suggestionProviders, subscriptions, logger) =>\n        registerVersionLensProviders(\n          extension,\n          suggestionProviders,\n          subscriptions,\n          logger\n        )\n    )\n\n  };\n\n  // register the map\n  container.register(containerMap);\n\n  // generate the provider registry async\n  const { logger, providerNames } = container.cradle;\n  const suggestionProviders = await registerSuggestionProviders(\n    providerNames,\n    container,\n    logger.child({ namespace: 'registry' })\n  )\n\n  // add the registry in to the container\n  container.register({\n    suggestionProviders: asValue(suggestionProviders)\n  });\n\n  return container;\n}","import { IFrozenOptions } from 'core.configuration';\n\nimport { VersionLensState } from \"presentation.extension\";\n\nimport { SuggestionsOptions } from \"./options/suggestionsOptions\";\nimport { StatusesOptions } from \"./options/statusesOptions\";\n\nexport class VersionLensExtension {\n\n  static extensionName: string = 'VersionLens';\n\n  config: IFrozenOptions;\n\n  suggestions: SuggestionsOptions;\n\n  statuses: StatusesOptions;\n\n  state: VersionLensState;\n\n  constructor(rootConfig: IFrozenOptions) {\n    this.config = rootConfig;\n\n    this.suggestions = new SuggestionsOptions(rootConfig);\n    this.statuses = new StatusesOptions(rootConfig);\n\n    // instantiate setContext options\n    this.state = new VersionLensState(this);\n  }\n\n}","module.exports = require(\"@npmcli/promise-spawn\");","module.exports = require(\"awilix\");","module.exports = require(\"fs\");","module.exports = require(\"jsonc-parser\");","module.exports = require(\"libnpmconfig\");","module.exports = require(\"minimatch\");","module.exports = require(\"npm-package-arg\");","module.exports = require(\"pacote\");","module.exports = require(\"path\");","module.exports = require(\"request-light\");","module.exports = require(\"semver\");","module.exports = require(\"url\");","module.exports = require(\"vscode\");","module.exports = require(\"winston\");","module.exports = require(\"xmldoc\");","module.exports = require(\"yaml\");"],"sourceRoot":""}